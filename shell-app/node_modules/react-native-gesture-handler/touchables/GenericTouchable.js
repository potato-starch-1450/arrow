module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      s = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.TOUCHABLE_STATE = void 0;
  var o = t(r(d[2])),
      n = t(r(d[3])),
      u = t(r(d[4])),
      l = t(r(d[5])),
      p = t(r(d[6])),
      c = t(r(d[7])),
      T = t(r(d[8])),
      f = s(r(d[9])),
      E = r(d[10]),
      h = r(d[11]),
      y = t(r(d[12])),
      P = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js";

  function O(t, s) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(t);
          s && (n = n.filter(function(s) {
              return Object.getOwnPropertyDescriptor(t, s).enumerable
          })), o.push.apply(o, n)
      }
      return o
  }
  var b = {
      UNDETERMINED: 0,
      BEGAN: 1,
      MOVED_OUTSIDE: 2
  };
  e.TOUCHABLE_STATE = b;
  var D = {
          accessible: y.default.bool,
          accessibilityLabel: y.default.node,
          accessibilityHint: y.default.string,
          hitSlop: y.default.shape({
              top: y.default.number,
              left: y.default.number,
              bottom: y.default.number,
              right: y.default.number
          }),
          disabled: y.default.bool,
          onPress: y.default.func,
          onPressIn: y.default.func,
          onPressOut: y.default.func,
          onLayout: y.default.func,
          onLongPress: y.default.func,
          nativeID: y.default.string,
          testID: y.default.string,
          delayPressIn: y.default.number,
          delayPressOut: y.default.number,
          delayLongPress: y.default.number
      },
      S = {
          extraButtonProps: y.default.object,
          onStateChange: y.default.func
      },
      v = (function(t) {
          function s() {
              var t, o;
              (0, u.default)(this, s);
              for (var n = arguments.length, l = new Array(n), T = 0; T < n; T++) l[T] = arguments[T];
              return (o = (0, p.default)(this, (t = (0, c.default)(s)).call.apply(t, [this].concat(l)))).longPressDetected = !1, o.pointerInside = !0, o.STATE = b.UNDETERMINED, o.handlePressIn = function() {
                  if (o.props.delayPressIn ? o.pressInTimeout = setTimeout(function() {
                          o.moveToState(b.BEGAN), o.pressInTimeout = null
                      }, o.props.delayPressIn) : o.moveToState(b.BEGAN), o.props.onLongPress) {
                      var t = (o.props.delayPressIn || 0) + (o.props.delayLongPress || 0);
                      o.longPressTimeout = setTimeout(o.onLongPressDetected, t)
                  }
              }, o.handleMoveOutside = function() {
                  o.props.delayPressOut ? o.pressOutTimeout = o.pressOutTimeout || setTimeout(function() {
                      o.moveToState(b.MOVED_OUTSIDE), o.pressOutTimeout = null
                  }, o.props.delayPressOut) : o.moveToState(b.MOVED_OUTSIDE)
              }, o.handleGoToUndetermined = function() {
                  clearTimeout(o.pressOutTimeout), o.props.delayPressOut ? o.pressOutTimeout = setTimeout(function() {
                      o.STATE === b.UNDETERMINED && o.moveToState(b.BEGAN), o.moveToState(b.UNDETERMINED), o.pressOutTimeout = null
                  }, o.props.delayPressOut) : (o.STATE === b.UNDETERMINED && o.moveToState(b.BEGAN), o.moveToState(b.UNDETERMINED))
              }, o.moveToState = function(t) {
                  t !== o.STATE && (t === b.BEGAN ? o.props.onPressIn && o.props.onPressIn() : t === b.MOVED_OUTSIDE ? o.props.onPressOut && o.props.onPressOut() : t === b.UNDETERMINED && (o.reset(), o.STATE === b.BEGAN && o.props.onPressOut && o.props.onPressOut()), o.props.onStateChange && o.props.onStateChange(o.STATE, t), o.STATE = t)
              }, o.onGestureEvent = function(t) {
                  var s = t.nativeEvent.pointerInside;
                  o.pointerInside !== s && (s ? o.onMoveIn() : o.onMoveOut()), o.pointerInside = s
              }, o.onHandlerStateChange = function(t) {
                  var s = t.nativeEvent.state;
                  if (s === h.State.CANCELLED || s === h.State.FAILED) o.moveToState(b.UNDETERMINED);
                  else if (s === ('ios' === E.Platform.OS ? h.State.ACTIVE : h.State.BEGAN) && o.STATE === b.UNDETERMINED) o.handlePressIn();
                  else if (s === h.State.END) {
                      var n = !o.longPressDetected && o.STATE !== b.MOVED_OUTSIDE && null === o.pressOutTimeout;
                      o.handleGoToUndetermined(), n && o.props.onPress && o.props.onPress()
                  }
              }, o.onLongPressDetected = function() {
                  o.longPressDetected = !0, o.props.onLongPress()
              }, o.onMoveIn = function() {
                  o.STATE === b.MOVED_OUTSIDE && o.moveToState(b.BEGAN)
              }, o.onMoveOut = function() {
                  clearTimeout(o.longPressTimeout), o.longPressTimeout = null, o.STATE === b.BEGAN && o.handleMoveOutside()
              }, o
          }
          return (0, T.default)(s, t), (0, l.default)(s, [{
              key: "componentDidMount",
              value: function() {
                  this.reset()
              }
          }, {
              key: "reset",
              value: function() {
                  this.longPressDetected = !1, this.pointerInside = !0, clearTimeout(this.pressInTimeout), clearTimeout(this.pressOutTimeout), clearTimeout(this.longPressTimeout), this.pressOutTimeout = null, this.longPressTimeout = null, this.pressInTimeout = null
              }
          }, {
              key: "componentWillUnmount",
              value: function() {
                  this.reset()
              }
          }, {
              key: "render",
              value: function() {
                  var t = {
                      accessible: !1 !== this.props.accessible,
                      accessibilityLabel: this.props.accessibilityLabel,
                      accessibilityHint: this.props.accessibilityHint,
                      accessibilityComponentType: this.props.accessibilityComponentType,
                      accessibilityRole: this.props.accessibilityRole,
                      accessibilityStates: this.props.accessibilityStates,
                      accessibilityTraits: this.props.accessibilityTraits,
                      nativeID: this.props.nativeID,
                      testID: this.props.testID,
                      onLayout: this.props.onLayout,
                      hitSlop: this.props.hitSlop
                  };
                  return f.default.createElement(h.BaseButton, (0, n.default)({
                      onHandlerStateChange: this.props.disabled ? null : this.onHandlerStateChange,
                      onGestureEvent: this.onGestureEvent,
                      hitSlop: this.props.hitSlop
                  }, this.props.extraButtonProps, {
                      __source: {
                          fileName: P,
                          lineNumber: 258
                      }
                  }), f.default.createElement(E.Animated.View, (0, n.default)({}, t, {
                      style: this.props.style,
                      __source: {
                          fileName: P,
                          lineNumber: 263
                      }
                  }), this.props.children))
              }
          }]), s
      })(f.Component);
  e.default = v, v.publicPropTypes = D, v.internalPropTypes = S, v.propTypes = (function(t) {
      for (var s = 1; s < arguments.length; s++) {
          var n = null != arguments[s] ? arguments[s] : {};
          s % 2 ? O(n, !0).forEach(function(s) {
              (0, o.default)(t, s, n[s])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : O(n).forEach(function(s) {
              Object.defineProperty(t, s, Object.getOwnPropertyDescriptor(n, s))
          })
      }
      return t
  })({}, S, {}, D), v.defaultProps = {
      delayLongPress: 600,
      extraButtonProps: {
          rippleColor: 'transparent'
      }
  }
}