module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = function(t) {
      var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          v = (function(v) {
              function w() {
                  var t, n;
                  (0, l.default)(this, w);
                  for (var o = arguments.length, u = new Array(o), c = 0; c < o; c++) u[c] = arguments[c];
                  return (n = (0, s.default)(this, (t = (0, f.default)(w)).call.apply(t, [this].concat(u))))._refHandler = function(t) {
                      for (var o = t; null != o;) {
                          for (var l = Object.getOwnPropertyNames(o), u = Array.isArray(l), s = 0, l = u ? l : l["function" == typeof Symbol && "function" == typeof Symbol && "function" == typeof Symbol ? Symbol.iterator : "@@iterator"]();;) {
                              var f;
                              if (u) {
                                  if (s >= l.length) break;
                                  f = l[s++]
                              } else {
                                  if ((s = l.next()).done) break;
                                  f = s.value
                              }
                              var c = f;
                              c.startsWith('_') || c.startsWith('component') || O.has(c) || 'function' != typeof o[c] || void 0 !== n[c] || (o[c].prototype ? n[c] = o[c].bind(t) : n[c] = o[c])
                          }
                          o = Object.getPrototypeOf(o)
                      }
                  }, n
              }
              return (0, c.default)(w, v), (0, u.default)(w, [{
                  key: "render",
                  value: function() {
                      var l = this,
                          u = Object.keys(this.props).reduce(function(t, n) {
                              return -1 !== j.indexOf(n) && (t[n] = l.props[n]), t
                          }, h({}, o));
                      return p.default.createElement(y.default, (0, n.default)({}, u, {
                          __source: {
                              fileName: b,
                              lineNumber: 79
                          }
                      }), p.default.createElement(t, (0, n.default)({}, this.props, {
                          ref: this._refHandler,
                          __source: {
                              fileName: b,
                              lineNumber: 80
                          }
                      })))
                  }
              }]), w
          })(p.default.Component);
      return v.propTypes = h({}, t.propTypes), v.displayName = t.displayName || 'ComponentWrapper', v
  };
  var n = t(r(d[1])),
      o = t(r(d[2])),
      l = t(r(d[3])),
      u = t(r(d[4])),
      s = t(r(d[5])),
      f = t(r(d[6])),
      c = t(r(d[7])),
      p = t(r(d[8])),
      y = t(r(d[9])),
      b = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-gesture-handler/createNativeWrapper.js";

  function v(t, n) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(t);
          n && (l = l.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), o.push.apply(o, l)
      }
      return o
  }

  function h(t) {
      for (var n = 1; n < arguments.length; n++) {
          var l = null != arguments[n] ? arguments[n] : {};
          n % 2 ? v(l, !0).forEach(function(n) {
              (0, o.default)(t, n, l[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : v(l).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(l, n))
          })
      }
      return t
  }
  var O = new Set(['replaceState', 'isMounted']),
      j = ['id', 'minPointers', 'enabled', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onGestureEvent', 'onHandlerStateChange', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'shouldActivateOnStart', 'disallowInterruption', 'onGestureHandlerEvent', 'onGestureHandlerStateChange']
}