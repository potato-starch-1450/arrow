module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var o = t(r(d[2])),
      s = t(r(d[3])),
      l = t(r(d[4])),
      p = t(r(d[5])),
      u = t(r(d[6])),
      f = t(r(d[7])),
      h = t(r(d[8])),
      c = n(r(d[9])),
      v = r(d[10]),
      w = r(d[11]),
      _ = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-gesture-handler/Swipeable.js";

  function b(t, n) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var s = Object.getOwnPropertySymbols(t);
          n && (s = s.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), o.push.apply(o, s)
      }
      return o
  }

  function S(t) {
      for (var n = 1; n < arguments.length; n++) {
          var o = null != arguments[n] ? arguments[n] : {};
          n % 2 ? b(o, !0).forEach(function(n) {
              (0, s.default)(t, n, o[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : b(o).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(o, n))
          })
      }
      return t
  }
  var O = .05;
  Math.sign || (Math.sign = function(t) {
      return Number(t > 0) - Number(t < 0) || +t
  });
  var A = (function(t) {
      function n(t) {
          var o;
          (0, l.default)(this, n), (o = (0, u.default)(this, (0, f.default)(n).call(this, t)))._updateAnimatedEvent = function(t, n) {
              var s = t.friction,
                  l = t.overshootFriction,
                  p = (t.useNativeAnimations, n.dragX),
                  u = n.rowTranslation,
                  f = n.leftWidth,
                  h = void 0 === f ? 0 : f,
                  c = n.rowWidth,
                  w = void 0 === c ? 0 : c,
                  _ = n.rightOffset,
                  b = void 0 === _ ? w : _,
                  S = Math.max(0, w - b),
                  O = t.overshootLeft,
                  A = void 0 === O ? h > 0 : O,
                  y = t.overshootRight,
                  R = void 0 === y ? S > 0 : y,
                  N = v.Animated.add(u, p.interpolate({
                      inputRange: [0, s],
                      outputRange: [0, 1]
                  })).interpolate({
                      inputRange: [-S - (R ? 1 : l), -S, h, h + (A ? 1 : l)],
                      outputRange: [-S - (R || l > 1 ? 1 : 0), -S, h, h + (A || l > 1 ? 1 : 0)]
                  });
              o._transX = N, o._showLeftAction = h > 0 ? N.interpolate({
                  inputRange: [-1, 0, h],
                  outputRange: [0, 0, 1]
              }) : new v.Animated.Value(0), o._leftActionTranslate = o._showLeftAction.interpolate({
                  inputRange: [0, Number.MIN_VALUE],
                  outputRange: [-1e4, 0],
                  extrapolate: 'clamp'
              }), o._showRightAction = S > 0 ? N.interpolate({
                  inputRange: [-S, 0, 1],
                  outputRange: [1, 0, 0]
              }) : new v.Animated.Value(0), o._rightActionTranslate = o._showRightAction.interpolate({
                  inputRange: [0, Number.MIN_VALUE],
                  outputRange: [-1e4, 0],
                  extrapolate: 'clamp'
              })
          }, o._onTapHandlerStateChange = function(t) {
              t.nativeEvent.oldState === w.State.ACTIVE && o.close()
          }, o._onHandlerStateChange = function(t) {
              var n = t.nativeEvent;
              n.oldState === w.State.ACTIVE && o._handleRelease(n)
          }, o._handleRelease = function(t) {
              var n = t.velocityX,
                  s = t.translationX,
                  l = o.state,
                  p = l.leftWidth,
                  u = void 0 === p ? 0 : p,
                  f = l.rowWidth,
                  h = void 0 === f ? 0 : f,
                  c = l.rowState,
                  v = o.state.rightOffset,
                  w = h - (void 0 === v ? h : v),
                  _ = o.props,
                  b = _.friction,
                  S = _.leftThreshold,
                  A = void 0 === S ? u / 2 : S,
                  y = _.rightThreshold,
                  R = void 0 === y ? w / 2 : y,
                  N = o._currentOffset() + s / b,
                  E = (s + O * n) / b,
                  W = 0;
              0 === c ? E > A ? W = u : E < -R && (W = -w) : 1 === c ? E > -A && (W = u) : E < R && (W = -w), o._animateRow(N, W, n / b)
          }, o._animateRow = function(t, n, s) {
              var l = o.state,
                  p = l.dragX,
                  u = l.rowTranslation;
              p.setValue(0), u.setValue(t), o.setState({
                  rowState: Math.sign(n)
              }), v.Animated.spring(u, S({
                  restSpeedThreshold: 1.7,
                  restDisplacementThreshold: .4,
                  velocity: s,
                  bounciness: 0,
                  toValue: n,
                  useNativeDriver: o.props.useNativeAnimations
              }, o.props.animationOptions)).start(function(t) {
                  t.finished && (n > 0 && o.props.onSwipeableLeftOpen ? o.props.onSwipeableLeftOpen() : n < 0 && o.props.onSwipeableRightOpen && o.props.onSwipeableRightOpen(), 0 === n ? o.props.onSwipeableClose && o.props.onSwipeableClose() : o.props.onSwipeableOpen && o.props.onSwipeableOpen())
              }), n > 0 && o.props.onSwipeableLeftWillOpen ? o.props.onSwipeableLeftWillOpen() : n < 0 && o.props.onSwipeableRightWillOpen && o.props.onSwipeableRightWillOpen(), 0 === n ? o.props.onSwipeableWillClose && o.props.onSwipeableWillClose() : o.props.onSwipeableWillOpen && o.props.onSwipeableWillOpen()
          }, o._onRowLayout = function(t) {
              var n = t.nativeEvent;
              o.setState({
                  rowWidth: n.layout.width
              })
          }, o._currentOffset = function() {
              var t = o.state,
                  n = t.leftWidth,
                  s = void 0 === n ? 0 : n,
                  l = t.rowWidth,
                  p = void 0 === l ? 0 : l,
                  u = t.rowState,
                  f = o.state.rightOffset;
              return 1 === u ? s : -1 === u ? -(p - (void 0 === f ? p : f)) : 0
          }, o.close = function() {
              o._animateRow(o._currentOffset(), 0)
          }, o.openLeft = function() {
              var t = o.state.leftWidth,
                  n = void 0 === t ? 0 : t;
              o._animateRow(o._currentOffset(), n)
          }, o.openRight = function() {
              var t = o.state.rowWidth,
                  n = void 0 === t ? 0 : t,
                  s = o.state.rightOffset,
                  l = n - (void 0 === s ? n : s);
              o._animateRow(o._currentOffset(), -l)
          };
          var s = new v.Animated.Value(0);
          return o.state = {
              dragX: s,
              rowTranslation: new v.Animated.Value(0),
              rowState: 0,
              leftWidth: void 0,
              rightOffset: void 0,
              rowWidth: void 0
          }, o._updateAnimatedEvent(t, o.state), o._onGestureEvent = v.Animated.event([{
              nativeEvent: {
                  translationX: s
              }
          }], {
              useNativeDriver: t.useNativeAnimations
          }), o
      }
      return (0, h.default)(n, t), (0, p.default)(n, [{
          key: "componentWillUpdate",
          value: function(t, n) {
              this.props.friction === t.friction && this.props.overshootLeft === t.overshootLeft && this.props.overshootRight === t.overshootRight && this.props.overshootFriction === t.overshootFriction && this.state.leftWidth === n.leftWidth && this.state.rightOffset === n.rightOffset && this.state.rowWidth === n.rowWidth || this._updateAnimatedEvent(t, n)
          }
      }, {
          key: "render",
          value: function() {
              var t = this,
                  n = this.state.rowState,
                  s = this.props,
                  l = s.children,
                  p = s.renderLeftActions,
                  u = s.renderRightActions,
                  f = p && c.default.createElement(v.Animated.View, {
                      style: [y.leftActions, {
                          transform: [{
                              translateX: this._leftActionTranslate
                          }]
                      }],
                      __source: {
                          fileName: _,
                          lineNumber: 290
                      }
                  }, p(this._showLeftAction, this._transX), c.default.createElement(v.View, {
                      onLayout: function(n) {
                          var o = n.nativeEvent;
                          return t.setState({
                              leftWidth: o.layout.x
                          })
                      },
                      __source: {
                          fileName: _,
                          lineNumber: 296
                      }
                  })),
                  h = u && c.default.createElement(v.Animated.View, {
                      style: [y.rightActions, {
                          transform: [{
                              translateX: this._rightActionTranslate
                          }]
                      }],
                      __source: {
                          fileName: _,
                          lineNumber: 305
                      }
                  }, u(this._showRightAction, this._transX), c.default.createElement(v.View, {
                      onLayout: function(n) {
                          var o = n.nativeEvent;
                          return t.setState({
                              rightOffset: o.layout.x
                          })
                      },
                      __source: {
                          fileName: _,
                          lineNumber: 311
                      }
                  }));
              return c.default.createElement(w.PanGestureHandler, (0, o.default)({}, this.props, {
                  minDeltaX: 10,
                  onGestureEvent: this._onGestureEvent,
                  onHandlerStateChange: this._onHandlerStateChange,
                  __source: {
                      fileName: _,
                      lineNumber: 320
                  }
              }), c.default.createElement(v.Animated.View, {
                  onLayout: this._onRowLayout,
                  style: [y.container, this.props.containerStyle],
                  __source: {
                      fileName: _,
                      lineNumber: 325
                  }
              }, f, h, c.default.createElement(w.TapGestureHandler, {
                  enabled: 0 !== n,
                  onHandlerStateChange: this._onTapHandlerStateChange,
                  __source: {
                      fileName: _,
                      lineNumber: 328
                  }
              }, c.default.createElement(v.Animated.View, {
                  pointerEvents: 0 === n ? 'auto' : 'box-only',
                  style: [{
                      transform: [{
                          translateX: this._transX
                      }]
                  }, this.props.childrenContainerStyle],
                  __source: {
                      fileName: _,
                      lineNumber: 331
                  }
              }, l))))
          }
      }]), n
  })(c.Component);
  e.default = A, A.defaultProps = {
      friction: 1,
      overshootFriction: 1,
      useNativeAnimations: !0
  };
  var y = v.StyleSheet.create({
      container: {
          overflow: 'hidden'
      },
      leftActions: S({}, v.StyleSheet.absoluteFillObject, {
          flexDirection: 'row'
      }),
      rightActions: S({}, v.StyleSheet.absoluteFillObject, {
          flexDirection: 'row-reverse'
      })
  })
}