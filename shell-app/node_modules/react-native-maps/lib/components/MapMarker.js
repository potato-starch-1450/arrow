module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      o = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var n = t(r(d[2])),
      u = t(r(d[3])),
      l = t(r(d[4])),
      s = t(r(d[5])),
      f = t(r(d[6])),
      p = t(r(d[7])),
      c = t(r(d[8])),
      h = t(r(d[9])),
      b = t(r(d[10])),
      y = t(r(d[11])),
      C = t(r(d[12])),
      v = r(d[13]),
      k = o(r(d[14]));

  function P(t, o) {
      var n = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var u = Object.getOwnPropertySymbols(t);
          o && (u = u.filter(function(o) {
              return Object.getOwnPropertyDescriptor(t, o).enumerable
          })), n.push.apply(n, u)
      }
      return n
  }
  var w = (function(t) {
          for (var o = 1; o < arguments.length; o++) {
              var n = null != arguments[o] ? arguments[o] : {};
              o % 2 ? P(n, !0).forEach(function(o) {
                  (0, b.default)(t, o, n[o])
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : P(n).forEach(function(o) {
                  Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o))
              })
          }
          return t
      })({}, v.ViewPropTypes || v.View.propTypes, {
          identifier: y.default.string,
          reuseIdentifier: y.default.string,
          title: y.default.string,
          description: y.default.string,
          testID: y.default.string,
          image: y.default.any,
          icon: y.default.any,
          opacity: y.default.number,
          pinColor: v.ColorPropType,
          coordinate: y.default.shape({
              latitude: y.default.number.isRequired,
              longitude: y.default.number.isRequired
          }).isRequired,
          centerOffset: y.default.shape({
              x: y.default.number.isRequired,
              y: y.default.number.isRequired
          }),
          calloutOffset: y.default.shape({
              x: y.default.number.isRequired,
              y: y.default.number.isRequired
          }),
          anchor: y.default.shape({
              x: y.default.number.isRequired,
              y: y.default.number.isRequired
          }),
          calloutAnchor: y.default.shape({
              x: y.default.number.isRequired,
              y: y.default.number.isRequired
          }),
          flat: y.default.bool,
          draggable: y.default.bool,
          tracksViewChanges: y.default.bool,
          tracksInfoWindowChanges: y.default.bool,
          stopPropagation: y.default.bool,
          onPress: y.default.func,
          onSelect: y.default.func,
          onDeselect: y.default.func,
          onCalloutPress: y.default.func,
          onDragStart: y.default.func,
          onDrag: y.default.func,
          onDragEnd: y.default.func
      }),
      O = (function(t) {
          function o(t) {
              var n;
              return (0, l.default)(this, o), (n = (0, f.default)(this, (0, p.default)(o).call(this, t))).showCallout = n.showCallout.bind((0, c.default)(n)), n.hideCallout = n.hideCallout.bind((0, c.default)(n)), n.redrawCallout = n.redrawCallout.bind((0, c.default)(n)), n.animateMarkerToCoordinate = n.animateMarkerToCoordinate.bind((0, c.default)(n)), n
          }
          return (0, h.default)(o, t), (0, s.default)(o, [{
              key: "setNativeProps",
              value: function(t) {
                  this.marker.setNativeProps(t)
              }
          }, {
              key: "showCallout",
              value: function() {
                  this._runCommand('showCallout', [])
              }
          }, {
              key: "hideCallout",
              value: function() {
                  this._runCommand('hideCallout', [])
              }
          }, {
              key: "redrawCallout",
              value: function() {
                  this._runCommand('redrawCallout', [])
              }
          }, {
              key: "animateMarkerToCoordinate",
              value: function(t, o) {
                  this._runCommand('animateMarkerToCoordinate', [t, o || 500])
              }
          }, {
              key: "redraw",
              value: function() {
                  this._runCommand('redraw', [])
              }
          }, {
              key: "_getHandle",
              value: function() {
                  return (0, v.findNodeHandle)(this.marker)
              }
          }, {
              key: "_runCommand",
              value: function(t, o) {
                  switch (v.Platform.OS) {
                      case 'android':
                          v.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this.getUIManagerCommand(t), o);
                          break;
                      case 'ios':
                          this.getMapManagerCommand(t).apply(void 0, [this._getHandle()].concat((0, u.default)(o)))
                  }
              }
          }, {
              key: "render",
              value: function() {
                  var t, o, u = this;
                  this.props.image && (t = (t = v.Image.resolveAssetSource(this.props.image) || {}).uri || this.props.image), this.props.icon && (o = (o = v.Image.resolveAssetSource(this.props.icon) || {}).uri);
                  var l = this.getAirComponent();
                  return C.default.createElement(l, (0, n.default)({
                      ref: function(t) {
                          u.marker = t
                      }
                  }, this.props, {
                      image: t,
                      icon: o,
                      style: [M.marker, this.props.style],
                      onPress: function(t) {
                          u.props.stopPropagation && t.stopPropagation(), u.props.onPress && u.props.onPress(t)
                      },
                      __source: {
                          fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-maps/lib/components/MapMarker.js",
                          lineNumber: 329
                      }
                  }))
              }
          }]), o
      })(C.default.Component);
  O.propTypes = w, O.defaultProps = {
      stopPropagation: !1
  }, O.viewConfig = {
      uiViewClassName: 'AIR<provider>MapMarker',
      validAttributes: {
          coordinate: !0
      }
  };
  var M = v.StyleSheet.create({
      marker: {
          position: 'absolute',
          backgroundColor: 'transparent'
      }
  });
  O.Animated = v.Animated.createAnimatedComponent(O);
  var _ = (0, k.default)(O, {
      componentType: 'Marker',
      providers: {
          google: {
              ios: k.SUPPORTED,
              android: k.USES_DEFAULT_IMPLEMENTATION
          }
      }
  });
  e.default = _
}