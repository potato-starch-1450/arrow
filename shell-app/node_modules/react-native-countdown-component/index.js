module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.CountDown = e.default = void 0;
  var n = t(r(d[1])),
      l = t(r(d[2])),
      o = t(r(d[3])),
      u = t(r(d[4])),
      s = t(r(d[5])),
      c = t(r(d[6])),
      p = t(r(d[7])),
      f = r(d[8]),
      h = (t(r(d[9])), r(d[10])),
      S = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-countdown-component/index.js",
      b = (function(t) {
          function p(t) {
              var l;
              return (0, n.default)(this, p), (l = (0, o.default)(this, (0, u.default)(p).call(this, t))).state = {
                  until: Math.max(l.props.until, 0),
                  lastUntil: null,
                  wentBackgroundAt: null
              }, l._handleAppStateChange = function(t) {
                  var n = l.state,
                      o = n.until,
                      u = n.wentBackgroundAt;
                  if ('active' === t && u && l.props.running) {
                      var s = (Date.now() - u) / 1e3;
                      l.setState({
                          lastUntil: o,
                          until: Math.max(0, o - s)
                      })
                  }
                  'background' === t && l.setState({
                      wentBackgroundAt: Date.now()
                  })
              }, l.getTimeLeft = function() {
                  var t = l.state.until;
                  return {
                      seconds: t % 60,
                      minutes: parseInt(t / 60, 10) % 60,
                      hours: parseInt(t / 3600, 10) % 24,
                      days: parseInt(t / 86400, 10)
                  }
              }, l.updateTimer = function() {
                  l.state.lastUntil !== l.state.until && l.props.running && ((1 === l.state.until || 0 === l.state.until && 1 !== l.state.lastUntil) && (l.props.onFinish && l.props.onFinish(), l.props.onChange && l.props.onChange(l.state.until)), 0 === l.state.until ? l.setState({
                      lastUntil: 0,
                      until: 0
                  }) : (l.props.onChange && l.props.onChange(l.state.until), l.setState({
                      lastUntil: l.state.until,
                      until: Math.max(0, l.state.until - 1)
                  })))
              }, l.renderDigit = function(t) {
                  var n = l.props,
                      o = n.digitStyle,
                      u = n.digitTxtStyle,
                      s = n.size;
                  return c.default.createElement(f.View, {
                      style: [y.digitCont, o, {
                          width: 2.3 * s,
                          height: 2.6 * s
                      }],
                      __source: {
                          fileName: S,
                          lineNumber: 128
                      }
                  }, c.default.createElement(f.Text, {
                      style: [y.digitTxt, {
                          fontSize: s
                      }, u],
                      __source: {
                          fileName: S,
                          lineNumber: 133
                      }
                  }, t))
              }, l.renderLabel = function(t) {
                  var n = l.props,
                      o = n.timeLabelStyle,
                      u = n.size;
                  if (t) return c.default.createElement(f.Text, {
                      style: [y.timeTxt, {
                          fontSize: u / 1.8
                      }, o],
                      __source: {
                          fileName: S,
                          lineNumber: 148
                      }
                  }, t)
              }, l.renderDoubleDigits = function(t, n) {
                  return c.default.createElement(f.View, {
                      style: y.doubleDigitCont,
                      __source: {
                          fileName: S,
                          lineNumber: 161
                      }
                  }, c.default.createElement(f.View, {
                      style: y.timeInnerCont,
                      __source: {
                          fileName: S,
                          lineNumber: 162
                      }
                  }, l.renderDigit(n)), l.renderLabel(t))
              }, l.renderSeparator = function() {
                  var t = l.props,
                      n = t.separatorStyle,
                      o = t.size;
                  return c.default.createElement(f.View, {
                      style: {
                          justifyContent: 'center',
                          alignItems: 'center'
                      },
                      __source: {
                          fileName: S,
                          lineNumber: 173
                      }
                  }, c.default.createElement(f.Text, {
                      style: [y.separatorTxt, {
                          fontSize: 1.2 * o
                      }, n],
                      __source: {
                          fileName: S,
                          lineNumber: 174
                      }
                  }, ':'))
              }, l.renderCountDown = function() {
                  var t = l.props,
                      n = t.timeToShow,
                      o = t.timeLabels,
                      u = t.showSeparator,
                      s = (l.state.until, l.getTimeLeft()),
                      p = s.days,
                      b = s.hours,
                      w = s.minutes,
                      C = s.seconds,
                      D = (0, h.sprintf)('%02d:%02d:%02d:%02d', p, b, w, C).split(':'),
                      _ = l.props.onPress ? f.TouchableOpacity : f.View;
                  return c.default.createElement(_, {
                      style: y.timeCont,
                      onPress: l.props.onPress,
                      __source: {
                          fileName: S,
                          lineNumber: 193
                      }
                  }, n.includes('D') ? l.renderDoubleDigits(o.d, D[0]) : null, u && n.includes('D') && n.includes('H') ? l.renderSeparator() : null, n.includes('H') ? l.renderDoubleDigits(o.h, D[1]) : null, u && n.includes('H') && n.includes('M') ? l.renderSeparator() : null, n.includes('M') ? l.renderDoubleDigits(o.m, D[2]) : null, u && n.includes('M') && n.includes('S') ? l.renderSeparator() : null, n.includes('S') ? l.renderDoubleDigits(o.s, D[3]) : null)
              }, l.timer = setInterval(l.updateTimer, 1e3), l
          }
          return (0, s.default)(p, t), (0, l.default)(p, [{
              key: "componentDidMount",
              value: function() {
                  f.AppState.addEventListener('change', this._handleAppStateChange)
              }
          }, {
              key: "componentWillUnmount",
              value: function() {
                  clearInterval(this.timer), f.AppState.removeEventListener('change', this._handleAppStateChange)
              }
          }, {
              key: "componentWillReceiveProps",
              value: function(t) {
                  this.props.until === t.until && this.props.id === t.id || this.setState({
                      lastUntil: this.state.until,
                      until: Math.max(t.until, 0)
                  })
              }
          }, {
              key: "render",
              value: function() {
                  return c.default.createElement(f.View, {
                      style: this.props.style,
                      __source: {
                          fileName: S,
                          lineNumber: 210
                      }
                  }, this.renderCountDown())
              }
          }]), p
      })(c.default.Component);
  e.CountDown = b, b.propTypes = {
      id: p.default.string,
      digitStyle: p.default.object,
      digitTxtStyle: p.default.object,
      timeLabelStyle: p.default.object,
      separatorStyle: p.default.object,
      timeToShow: p.default.array,
      showSeparator: p.default.bool,
      size: p.default.number,
      until: p.default.number,
      onChange: p.default.func,
      onPress: p.default.func,
      onFinish: p.default.func
  }, b.defaultProps = {
      digitStyle: {
          backgroundColor: '#FAB913'
      },
      digitTxtStyle: {
          color: '#000'
      },
      timeLabelStyle: {
          color: '#000'
      },
      timeLabels: {
          d: 'Days',
          h: 'Hours',
          m: 'Minutes',
          s: 'Seconds'
      },
      separatorStyle: {
          color: '#000'
      },
      timeToShow: ['D', 'H', 'M', 'S'],
      showSeparator: !1,
      until: 0,
      size: 15,
      running: !0
  };
  var y = f.StyleSheet.create({
          timeCont: {
              flexDirection: 'row',
              justifyContent: 'center'
          },
          timeTxt: {
              color: 'white',
              marginVertical: 2,
              backgroundColor: 'transparent'
          },
          timeInnerCont: {
              flexDirection: 'row',
              justifyContent: 'center',
              alignItems: 'center'
          },
          digitCont: {
              borderRadius: 5,
              marginHorizontal: 2,
              alignItems: 'center',
              justifyContent: 'center'
          },
          doubleDigitCont: {
              justifyContent: 'center',
              alignItems: 'center'
          },
          digitTxt: {
              color: 'white',
              fontWeight: 'bold',
              fontVariant: ['tabular-nums']
          },
          separatorTxt: {
              backgroundColor: 'transparent',
              fontWeight: 'bold'
          }
      }),
      w = b;
  e.default = w
}