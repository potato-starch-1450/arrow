module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var l = r(d[1]),
      n = t(r(d[2])),
      o = t(r(d[3])),
      s = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-onboarding-swiper/src/Page.js",
      u = function(t) {
          var n = t.isLight,
              u = t.image,
              f = t.title,
              c = t.subtitle,
              y = t.width,
              b = t.height,
              w = t.containerStyles,
              S = t.imageContainerStyles,
              h = t.allowFontScaling,
              _ = t.titleStyles,
              T = t.subTitleStyles,
              N = f;
          ('string' == typeof f || f instanceof String) && (N = o.default.createElement(l.View, {
              style: p.padding,
              __source: {
                  fileName: s,
                  lineNumber: 21
              }
          }, o.default.createElement(l.Text, {
              allowFontScaling: h,
              style: [p.title, n ? p.titleLight : {}, _],
              __source: {
                  fileName: s,
                  lineNumber: 22
              }
          }, f)));
          var x = c;
          return ('string' == typeof c || c instanceof String) && (x = o.default.createElement(l.View, {
              style: p.padding,
              __source: {
                  fileName: s,
                  lineNumber: 32
              }
          }, o.default.createElement(l.Text, {
              allowFontScaling: h,
              style: [p.subtitle, n ? p.subtitleLight : {}, T],
              __source: {
                  fileName: s,
                  lineNumber: 33
              }
          }, c))), o.default.createElement(l.View, {
              style: [p.container, w, {
                  width: y,
                  height: b
              }],
              __source: {
                  fileName: s,
                  lineNumber: 41
              }
          }, o.default.createElement(l.View, {
              style: [p.imageContainer, S],
              __source: {
                  fileName: s,
                  lineNumber: 42
              }
          }, u), N, x)
      };
  u.propTypes = {
      isLight: n.default.bool.isRequired,
      image: n.default.element.isRequired,
      containerStyles: l.ViewPropTypes.style,
      imageContainerStyles: l.ViewPropTypes.style,
      title: n.default.oneOfType([n.default.string, n.default.element]).isRequired,
      subtitle: n.default.oneOfType([n.default.string, n.default.element]).isRequired,
      allowFontScaling: n.default.bool,
      titleStyles: l.Text.propTypes.style,
      subTitleStyles: l.Text.propTypes.style,
      width: n.default.number.isRequired,
      height: n.default.number.isRequired
  }, u.defaultProps = {
      containerStyles: null,
      imageContainerStyles: null,
      allowFontScaling: !0,
      titleStyles: null,
      subTitleStyles: null
  };
  var f = l.Dimensions.get('window'),
      c = f.width,
      y = f.height > c,
      p = {
          container: {
              flex: 1,
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: y ? 'center' : 'flex-start',
              paddingTop: y ? 0 : 10
          },
          imageContainer: {
              flex: 0,
              paddingBottom: y ? 60 : 10,
              alignItems: 'center',
              width: '100%'
          },
          padding: {
              paddingHorizontal: 10
          },
          title: {
              textAlign: 'center',
              fontSize: 26,
              color: '#fff',
              paddingBottom: 15
          },
          titleLight: {
              color: '#000'
          },
          subtitle: {
              textAlign: 'center',
              fontSize: 16,
              color: 'rgba(255, 255, 255, 0.7)'
          },
          subtitleLight: {
              color: 'rgba(0, 0, 0, 0.7)'
          }
      },
      b = u;
  e.default = b
}