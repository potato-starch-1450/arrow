module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var n = t(r(d[1])),
      l = r(d[2]),
      o = t(r(d[3])),
      s = t(r(d[4])),
      u = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-onboarding-swiper/src/buttons/SymbolButton.js";

  function c(t, n) {
      var l = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(t);
          n && (o = o.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), l.push.apply(l, o)
      }
      return l
  }

  function f(t) {
      for (var l = 1; l < arguments.length; l++) {
          var o = null != arguments[l] ? arguments[l] : {};
          l % 2 ? c(o, !0).forEach(function(l) {
              (0, n.default)(t, l, o[l])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : c(o).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(o, n))
          })
      }
      return t
  }
  var y = function(t) {
      var n = t.size,
          s = t.onPress,
          c = t.style,
          y = t.textStyle,
          p = t.children;
      return o.default.createElement(l.View, {
          style: f({
              height: n,
              width: n,
              justifyContent: 'center',
              alignItems: 'center'
          }, c),
          __source: {
              fileName: u,
              lineNumber: 6
          }
      }, o.default.createElement(l.TouchableOpacity, {
          style: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center'
          },
          onPress: s,
          hitSlop: {
              top: 15,
              bottom: 15,
              left: 15,
              right: 15
          },
          __source: {
              fileName: u,
              lineNumber: 15
          }
      }, o.default.createElement(l.Text, {
          allowFontScaling: !1,
          style: f({
              textAlign: 'center',
              fontSize: n / 1.7
          }, y),
          __source: {
              fileName: u,
              lineNumber: 24
          }
      }, p)))
  };
  y.propTypes = {
      size: s.default.number.isRequired,
      onPress: s.default.func.isRequired,
      style: l.ViewPropTypes.style,
      textStyle: l.Text.propTypes.style
  }, y.defaultProps = {
      style: null,
      textStyle: null
  };
  var p = y;
  e.default = p
}