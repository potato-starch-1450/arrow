module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      n = r(d[1]),
      o = r(d[2]),
      s = r(d[3]),
      p = r(d[4]),
      c = r(d[5]),
      _ = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Animated/src/createAnimatedComponent.js",
      l = r(d[6]).AnimatedEvent,
      u = r(d[7]),
      h = r(d[8]),
      v = r(d[9]),
      f = r(d[10]);
  m.exports = function(N, k) {
      f('function' != typeof N || N.prototype && N.prototype.isReactComponent, "`createAnimatedComponent` does not support stateless functional components; use a class component instead.");
      var y = (function(v) {
          function f(t) {
              var o;
              return n(this, f), (o = s(this, p(f).call(this, t)))._invokeAnimatedPropsCallbackOnMount = !1, o._eventDetachers = [], o._animatedPropsCallback = function() {
                  if (null == o._component) o._invokeAnimatedPropsCallbackOnMount = !0;
                  else if (f.__skipSetNativeProps_FOR_TESTS_ONLY || 'function' != typeof o._component.setNativeProps) o.forceUpdate();
                  else {
                      if (o._propsAnimated.__isNative) throw new Error("Attempting to run JS driven animation on animated node that has been moved to \"native\" earlier by starting an animation with `useNativeDriver: true`");
                      o._component.setNativeProps(o._propsAnimated.__getAnimatedValue())
                  }
              }, o._setComponentRef = function(t) {
                  o._prevComponent = o._component, o._component = t
              }, o
          }
          return c(f, v), o(f, [{
              key: "componentWillUnmount",
              value: function() {
                  this._propsAnimated && this._propsAnimated.__detach(), this._detachNativeEvents()
              }
          }, {
              key: "setNativeProps",
              value: function(t) {
                  this._component.setNativeProps(t)
              }
          }, {
              key: "UNSAFE_componentWillMount",
              value: function() {
                  this._attachProps(this.props)
              }
          }, {
              key: "componentDidMount",
              value: function() {
                  this._invokeAnimatedPropsCallbackOnMount && (this._invokeAnimatedPropsCallbackOnMount = !1, this._animatedPropsCallback()), this._propsAnimated.setNativeView(this._component), this._attachNativeEvents()
              }
          }, {
              key: "_attachNativeEvents",
              value: function() {
                  var t = this,
                      n = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component,
                      o = function(o) {
                          var s = t.props[o];
                          s instanceof l && s.__isNative && (s.__attach(n, o), t._eventDetachers.push(function() {
                              return s.__detach(n, o)
                          }))
                      };
                  for (var s in this.props) o(s)
              }
          }, {
              key: "_detachNativeEvents",
              value: function() {
                  this._eventDetachers.forEach(function(t) {
                      return t()
                  }), this._eventDetachers = []
              }
          }, {
              key: "_attachProps",
              value: function(t) {
                  var n = this._propsAnimated;
                  this._propsAnimated = new u(t, this._animatedPropsCallback), n && n.__detach()
              }
          }, {
              key: "UNSAFE_componentWillReceiveProps",
              value: function(t) {
                  this._attachProps(t)
              }
          }, {
              key: "componentDidUpdate",
              value: function(t) {
                  this._component !== this._prevComponent && this._propsAnimated.setNativeView(this._component), this._component === this._prevComponent && t === this.props || (this._detachNativeEvents(), this._attachNativeEvents())
              }
          }, {
              key: "render",
              value: function() {
                  var n = this._propsAnimated.__getValue();
                  return h.createElement(N, t({}, k, n, {
                      ref: this._setComponentRef,
                      collapsable: !this._propsAnimated.__isNative && n.collapsable,
                      __source: {
                          fileName: _,
                          lineNumber: 151
                      }
                  }))
              }
          }, {
              key: "getNode",
              value: function() {
                  return this._component
              }
          }]), f
      })(h.Component);
      y.__skipSetNativeProps_FOR_TESTS_ONLY = !1;
      var A = N.propTypes;
      return y.propTypes = {
          style: function(t, n, o) {
              if (A)
                  for (var s in v) A[s] || void 0 === t[s] || console.warn('You are setting the style `{ ' + s + ": ... }` as a prop. You should nest it in a style object. E.g. `{ style: { " + s + ': ... } }`')
          }
      }, y
  }
}