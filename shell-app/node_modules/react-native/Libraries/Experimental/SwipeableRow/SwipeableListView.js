module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      n = r(d[1]),
      o = r(d[2]),
      s = r(d[3]),
      u = r(d[4]),
      c = r(d[5]),
      l = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableListView.js",
      p = r(d[6]),
      S = r(d[7]),
      w = r(d[8]),
      f = r(d[9]),
      _ = (function(_) {
          function R(t, u) {
              var c;
              return n(this, R), (c = o(this, s(R).call(this, t, u)))._listViewRef = null, c._shouldBounceFirstRowOnMount = !1, c._onScroll = function(t) {
                  c.props.dataSource.getOpenRowID() && c.setState({
                      dataSource: c.state.dataSource.setOpenRowID(null)
                  }), c.props.onScroll && c.props.onScroll(t)
              }, c._renderRow = function(t, n, o) {
                  var s = c.props.renderQuickActions(t, n, o);
                  if (!s) return c.props.renderRow(t, n, o);
                  var u = !1;
                  return c._shouldBounceFirstRowOnMount && (c._shouldBounceFirstRowOnMount = !1, u = o === c.props.dataSource.getFirstRowID()), S.createElement(f, {
                      slideoutView: s,
                      isOpen: t.id === c.props.dataSource.getOpenRowID(),
                      maxSwipeDistance: c._getMaxSwipeDistance(t, n, o),
                      key: o,
                      onOpen: function() {
                          return c._onOpen(t.id)
                      },
                      onClose: function() {
                          return c._onClose(t.id)
                      },
                      onSwipeEnd: function() {
                          return c._setListViewScrollable(!0)
                      },
                      onSwipeStart: function() {
                          return c._setListViewScrollable(!1)
                      },
                      shouldBounceOnMount: u,
                      __source: {
                          fileName: l,
                          lineNumber: 216
                      }
                  }, c.props.renderRow(t, n, o))
              }, c._shouldBounceFirstRowOnMount = c.props.bounceFirstRowOnMount, c.state = {
                  dataSource: c.props.dataSource
              }, c
          }
          return c(R, _), u(R, null, [{
              key: "getNewDataSource",
              value: function() {
                  return new w({
                      getRowData: function(t, n, o) {
                          return t[n][o]
                      },
                      getSectionHeaderData: function(t, n) {
                          return t[n]
                      },
                      rowHasChanged: function(t, n) {
                          return t !== n
                      },
                      sectionHeaderHasChanged: function(t, n) {
                          return t !== n
                      }
                  })
              }
          }]), u(R, [{
              key: "UNSAFE_componentWillReceiveProps",
              value: function(t) {
                  this.state.dataSource.getDataSource() !== t.dataSource.getDataSource() && this.setState({
                      dataSource: t.dataSource
                  })
              }
          }, {
              key: "render",
              value: function() {
                  var n = this;
                  return S.createElement(p, t({}, this.props, {
                      ref: function(t) {
                          n._listViewRef = t
                      },
                      dataSource: this.state.dataSource.getDataSource(),
                      onScroll: this._onScroll,
                      renderRow: this._renderRow,
                      __source: {
                          fileName: l,
                          lineNumber: 124
                      }
                  }))
              }
          }, {
              key: "_setListViewScrollable",
              value: function(t) {
                  this._listViewRef && 'function' == typeof this._listViewRef.setNativeProps && this._listViewRef.setNativeProps({
                      scrollEnabled: t
                  })
              }
          }, {
              key: "getScrollResponder",
              value: function() {
                  if (this._listViewRef && 'function' == typeof this._listViewRef.getScrollResponder) return this._listViewRef.getScrollResponder()
              }
          }, {
              key: "_getMaxSwipeDistance",
              value: function(t, n, o) {
                  return 'function' == typeof this.props.maxSwipeDistance ? this.props.maxSwipeDistance(t, n, o) : this.props.maxSwipeDistance
              }
          }, {
              key: "_onOpen",
              value: function(t) {
                  this.setState({
                      dataSource: this.state.dataSource.setOpenRowID(t)
                  })
              }
          }, {
              key: "_onClose",
              value: function(t) {
                  this.setState({
                      dataSource: this.state.dataSource.setOpenRowID(null)
                  })
              }
          }]), R
      })(S.Component);
  _.defaultProps = {
      bounceFirstRowOnMount: !1,
      renderQuickActions: function() {
          return null
      }
  }, m.exports = _
}