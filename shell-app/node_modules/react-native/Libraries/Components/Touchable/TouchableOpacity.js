module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]);

  function s(t, s) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(t);
          s && (n = n.filter(function(s) {
              return Object.getOwnPropertyDescriptor(t, s).enumerable
          })), o.push.apply(o, n)
      }
      return o
  }

  function o(o) {
      for (var n = 1; n < arguments.length; n++) {
          var p = null != arguments[n] ? arguments[n] : {};
          n % 2 ? s(p, !0).forEach(function(s) {
              t(o, s, p[s])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(p)) : s(p).forEach(function(t) {
              Object.defineProperty(o, t, Object.getOwnPropertyDescriptor(p, t))
          })
      }
      return o
  }
  var n = r(d[1]),
      p = r(d[2]),
      c = r(d[3]),
      l = r(d[4]),
      u = r(d[5]),
      h = r(d[6]),
      y = r(d[7]),
      b = r(d[8]),
      f = r(d[9]),
      P = r(d[10]),
      O = r(d[11]),
      v = {
          top: 20,
          left: 20,
          right: 20,
          bottom: 30
      },
      S = f({
          displayName: 'TouchableOpacity',
          mixins: [y.Mixin.withoutDefaultFocusAndBlur, c],
          propTypes: o({}, b.propTypes, {
              activeOpacity: h.number,
              hasTVPreferredFocus: h.bool,
              tvParallaxProperties: h.object
          }),
          getDefaultProps: function() {
              return {
                  activeOpacity: .2
              }
          },
          getInitialState: function() {
              return o({}, this.touchableGetInitialState(), {
                  anim: new n.Value(this._getChildStyleOpacityWithDefault())
              })
          },
          componentDidMount: function() {
              P(this.props)
          },
          UNSAFE_componentWillReceiveProps: function(t) {
              P(t)
          },
          componentDidUpdate: function(t, s) {
              this.props.disabled !== t.disabled && this._opacityInactive(250)
          },
          setOpacityTo: function(t, s) {
              n.timing(this.state.anim, {
                  toValue: t,
                  duration: s,
                  easing: p.inOut(p.quad),
                  useNativeDriver: !0
              }).start()
          },
          touchableHandleActivePressIn: function(t) {
              'onResponderGrant' === t.dispatchConfig.registrationName ? this._opacityActive(0) : this._opacityActive(150), this.props.onPressIn && this.props.onPressIn(t)
          },
          touchableHandleActivePressOut: function(t) {
              this._opacityInactive(250), this.props.onPressOut && this.props.onPressOut(t)
          },
          touchableHandleFocus: function(t) {
              l.isTV && this._opacityActive(150), this.props.onFocus && this.props.onFocus(t)
          },
          touchableHandleBlur: function(t) {
              l.isTV && this._opacityInactive(250), this.props.onBlur && this.props.onBlur(t)
          },
          touchableHandlePress: function(t) {
              this.props.onPress && this.props.onPress(t)
          },
          touchableHandleLongPress: function(t) {
              this.props.onLongPress && this.props.onLongPress(t)
          },
          touchableGetPressRectOffset: function() {
              return this.props.pressRetentionOffset || v
          },
          touchableGetHitSlop: function() {
              return this.props.hitSlop
          },
          touchableGetHighlightDelayMS: function() {
              return this.props.delayPressIn || 0
          },
          touchableGetLongPressDelayMS: function() {
              return 0 === this.props.delayLongPress ? 0 : this.props.delayLongPress || 500
          },
          touchableGetPressOutDelayMS: function() {
              return this.props.delayPressOut
          },
          _opacityActive: function(t) {
              this.setOpacityTo(this.props.activeOpacity, t)
          },
          _opacityInactive: function(t) {
              this.setOpacityTo(this._getChildStyleOpacityWithDefault(), t)
          },
          _getChildStyleOpacityWithDefault: function() {
              var t = O(this.props.style) || {};
              return null == t.opacity ? 1 : t.opacity
          },
          render: function() {
              return u.createElement(n.View, {
                  accessible: !1 !== this.props.accessible,
                  accessibilityLabel: this.props.accessibilityLabel,
                  accessibilityHint: this.props.accessibilityHint,
                  accessibilityRole: this.props.accessibilityRole,
                  accessibilityStates: this.props.accessibilityStates,
                  style: [this.props.style, {
                      opacity: this.state.anim
                  }],
                  nativeID: this.props.nativeID,
                  testID: this.props.testID,
                  onLayout: this.props.onLayout,
                  isTVSelectable: !0,
                  hasTVPreferredFocus: this.props.hasTVPreferredFocus,
                  tvParallaxProperties: this.props.tvParallaxProperties,
                  hitSlop: this.props.hitSlop,
                  onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
                  onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
                  onResponderGrant: this.touchableHandleResponderGrant,
                  onResponderMove: this.touchableHandleResponderMove,
                  onResponderRelease: this.touchableHandleResponderRelease,
                  onResponderTerminate: this.touchableHandleResponderTerminate,
                  __source: {
                      fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js",
                      lineNumber: 282
                  }
              }, this.props.children, y.renderDebugView({
                  color: 'cyan',
                  hitSlop: this.props.hitSlop
              }))
          }
      });
  m.exports = S
}