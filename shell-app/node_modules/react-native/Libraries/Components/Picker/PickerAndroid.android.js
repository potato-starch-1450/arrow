module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      s = r(d[1]),
      o = r(d[2]),
      n = r(d[3]),
      p = r(d[4]),
      l = r(d[5]),
      c = r(d[6]),
      u = r(d[7]),
      h = r(d[8]),
      v = r(d[9]),
      f = r(d[10]),
      b = 'picker',
      y = (function(v) {
          function y() {
              var t, o;
              s(this, y);
              for (var l = arguments.length, c = new Array(l), u = 0; u < l; u++) c[u] = arguments[u];
              return (o = n(this, (t = p(y)).call.apply(t, [this].concat(c)))).state = y.getDerivedStateFromProps(o.props), o._onChange = function(t) {
                  if (o.props.onValueChange) {
                      var s = t.nativeEvent.position;
                      if (s >= 0) {
                          var n = h.Children.toArray(o.props.children)[s].props.value;
                          o.props.onValueChange(n, s)
                      } else o.props.onValueChange(null, s)
                  }
                  o.refs[b] && o.state.selectedIndex !== t.nativeEvent.position && o.refs[b].setNativeProps({
                      selected: o.state.selectedIndex
                  })
              }, o
          }
          return l(y, v), o(y, [{
              key: "render",
              value: function() {
                  var s = "dropdown" === this.props.mode ? c : u,
                      o = {
                          enabled: this.props.enabled,
                          items: this.state.items,
                          mode: this.props.mode,
                          onSelect: this._onChange,
                          prompt: this.props.prompt,
                          selected: this.state.selectedIndex,
                          testID: this.props.testID,
                          style: [C.pickerAndroid, this.props.style],
                          accessibilityLabel: this.props.accessibilityLabel
                      };
                  return h.createElement(s, t({
                      ref: b
                  }, o, {
                      __source: {
                          fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js",
                          lineNumber: 106
                      }
                  }))
              }
          }], [{
              key: "getDerivedStateFromProps",
              value: function(t) {
                  var s = 0,
                      o = h.Children.map(t.children, function(o, n) {
                          o.props.value === t.selectedValue && (s = n);
                          var p = {
                              value: o.props.value,
                              label: o.props.label
                          };
                          return o.props.color && (p.color = f(o.props.color)), p
                      });
                  return {
                      selectedIndex: s,
                      items: o
                  }
              }
          }]), y
      })(h.Component),
      C = v.create({
          pickerAndroid: {
              height: 50
          }
      });
  m.exports = y
}