module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      o = r(d[1]),
      n = r(d[2]),
      s = r(d[3]),
      u = r(d[4]),
      l = r(d[5]),
      p = r(d[6]),
      h = r(d[7]),
      y = r(d[8]),
      c = l.createAnimatedComponent(y),
      v = (function(l) {
          function h() {
              var o, u;
              t(this, h);
              for (var l = arguments.length, y = new Array(l), c = 0; c < l; c++) y[c] = arguments[c];
              return (u = n(this, (o = s(h)).call.apply(o, [this].concat(y)))).state = {
                  measured: !1,
                  layoutY: 0,
                  layoutHeight: 0,
                  nextHeaderLayoutY: u.props.nextHeaderLayoutY
              }, u._onLayout = function(t) {
                  u.setState({
                      measured: !0,
                      layoutY: t.nativeEvent.layout.y,
                      layoutHeight: t.nativeEvent.layout.height
                  }), u.props.onLayout(t);
                  var o = p.Children.only(u.props.children);
                  o.props.onLayout && o.props.onLayout(t)
              }, u
          }
          return u(h, l), o(h, [{
              key: "setNextHeaderY",
              value: function(t) {
                  this.setState({
                      nextHeaderLayoutY: t
                  })
              }
          }, {
              key: "render",
              value: function() {
                  var t = this.props,
                      o = t.inverted,
                      n = t.scrollViewHeight,
                      s = this.state,
                      u = s.measured,
                      l = s.layoutHeight,
                      h = s.layoutY,
                      y = s.nextHeaderLayoutY,
                      v = [-1, 0],
                      L = [0, 0];
                  if (u)
                      if (o) {
                          if (null != n) {
                              var H = h + l - n;
                              if (H > 0) {
                                  v.push(H), L.push(0), v.push(H + 1), L.push(1);
                                  var Y = (y || 0) - l - n;
                                  Y > H && (v.push(Y, Y + 1), L.push(Y - H, Y - H))
                              }
                          }
                      } else {
                          v.push(h), L.push(0);
                          var x = (y || 0) - l;
                          x >= h ? (v.push(x, x + 1), L.push(x - h, x - h)) : (v.push(h + 1), L.push(1))
                      } var _ = this.props.scrollAnimatedValue.interpolate({
                          inputRange: v,
                          outputRange: L
                      }),
                      w = p.Children.only(this.props.children);
                  return p.createElement(c, {
                      collapsable: !1,
                      onLayout: this._onLayout,
                      style: [w.props.style, f.header, {
                          transform: [{
                              translateY: _
                          }]
                      }],
                      __source: {
                          fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js",
                          lineNumber: 141
                      }
                  }, p.cloneElement(w, {
                      style: f.fill,
                      onLayout: void 0
                  }))
              }
          }]), h
      })(p.Component),
      f = h.create({
          header: {
              zIndex: 10
          },
          fill: {
              flex: 1
          }
      });
  m.exports = v
}