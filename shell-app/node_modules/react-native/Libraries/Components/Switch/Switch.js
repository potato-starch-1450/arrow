module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var n = r(d[0]),
      o = r(d[1]),
      t = r(d[2]),
      l = r(d[3]),
      u = r(d[4]),
      s = r(d[5]),
      h = r(d[6]),
      c = r(d[7]),
      C = (r(d[8]), r(d[9])),
      p = (r(d[10]), (function(p) {
          function b() {
              var n, o;
              t(this, b);
              for (var l = arguments.length, h = new Array(l), c = 0; c < l; c++) h[c] = arguments[c];
              return (o = u(this, (n = s(b)).call.apply(n, [this].concat(h))))._handleChange = function(n) {
                  if (null != o._nativeSwitchRef) {
                      var t = !0 === o.props.value;
                      o._nativeSwitchRef.setNativeProps({
                          on: t
                      }), null != o.props.onChange && o.props.onChange(n), null != o.props.onValueChange && o.props.onValueChange(n.nativeEvent.value)
                  }
              }, o._handleSwitchNativeComponentRef = function(n) {
                  o._nativeSwitchRef = n
              }, o
          }
          return h(b, p), l(b, [{
              key: "render",
              value: function() {
                  var t, l = this.props,
                      u = l.disabled,
                      s = (l.ios_backgroundColor, l.onChange, l.onValueChange, l.style),
                      h = l.thumbColor,
                      p = l.trackColor,
                      b = l.value,
                      _ = o(l, ["disabled", "ios_backgroundColor", "onChange", "onValueChange", "style", "thumbColor", "trackColor", "value"]),
                      w = h,
                      R = null == p ? void 0 : p.false,
                      S = null == p ? void 0 : p.true,
                      k = _,
                      y = k.thumbTintColor,
                      T = k.tintColor,
                      N = k.onTintColor;
                  null != y && (w = y), null != T && (R = T), null != N && (S = N);
                  var V = {
                      enabled: !0 !== u,
                      on: !0 === b,
                      style: s,
                      thumbTintColor: w,
                      trackColorForFalse: R,
                      trackColorForTrue: S,
                      trackTintColor: !0 === b ? S : R
                  };
                  return C.createElement(c, n({}, _, V, {
                      accessibilityRole: null != (t = _.accessibilityRole) ? t : 'button',
                      onChange: this._handleChange,
                      onResponderTerminationRequest: v,
                      onStartShouldSetResponder: f,
                      ref: this._handleSwitchNativeComponentRef,
                      __source: {
                          fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/Switch/Switch.js",
                          lineNumber: 166
                      }
                  }))
              }
          }]), b
      })(C.Component)),
      v = function() {
          return !1
      },
      f = function() {
          return !0
      };
  m.exports = p
}