module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      n = r(d[1]),
      o = r(d[2]),
      l = r(d[3]),
      s = r(d[4]),
      c = r(d[5]),
      p = r(d[6]),
      u = r(d[7]);

  function h(t, n) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(t);
          n && (l = l.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), o.push.apply(o, l)
      }
      return o
  }

  function P(t) {
      for (var o = 1; o < arguments.length; o++) {
          var l = null != arguments[o] ? arguments[o] : {};
          o % 2 ? h(l, !0).forEach(function(o) {
              n(t, o, l[o])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : h(l).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(l, n))
          })
      }
      return t
  }
  var f = r(d[8]),
      y = r(d[9]),
      w = r(d[10]),
      S = r(d[11]),
      b = r(d[12]),
      v = 'viewPager',
      O = (function(n) {
          function h() {
              var t, n;
              o(this, h);
              for (var l = arguments.length, u = new Array(l), b = 0; b < l; b++) u[b] = arguments[b];
              return (n = s(this, (t = c(h)).call.apply(t, [this].concat(u)))).getInnerViewNode = function() {
                  return n.refs[v].getInnerViewNode()
              }, n._childrenWithOverridenStyle = function() {
                  return f.Children.map(n.props.children, function(t) {
                      if (!t) return null;
                      var n = P({}, t.props, {
                          style: [t.props.style, {
                              position: 'absolute',
                              left: 0,
                              top: 0,
                              right: 0,
                              bottom: 0,
                              width: void 0,
                              height: void 0
                          }],
                          collapsable: !1
                      });
                      return t.type && t.type.displayName && 'RCTView' !== t.type.displayName && 'View' !== t.type.displayName && console.warn('Each ViewPager child must be a <View>. Was ' + t.type.displayName), f.createElement(t.type, n)
                  })
              }, n._onPageScroll = function(t) {
                  n.props.onPageScroll && n.props.onPageScroll(t), 'on-drag' === n.props.keyboardDismissMode && S()
              }, n._onPageScrollStateChanged = function(t) {
                  n.props.onPageScrollStateChanged && n.props.onPageScrollStateChanged(t)
              }, n._onPageSelected = function(t) {
                  n.props.onPageSelected && n.props.onPageSelected(t)
              }, n.setPage = function(t) {
                  w.dispatchViewManagerCommand(y.findNodeHandle(p(n)), w.getViewManagerConfig('AndroidViewPager').Commands.setPage, [t])
              }, n.setPageWithoutAnimation = function(t) {
                  w.dispatchViewManagerCommand(y.findNodeHandle(p(n)), w.getViewManagerConfig('AndroidViewPager').Commands.setPageWithoutAnimation, [t])
              }, n
          }
          return u(h, n), l(h, [{
              key: "componentDidMount",
              value: function() {
                  null != this.props.initialPage && this.setPageWithoutAnimation(this.props.initialPage)
              }
          }, {
              key: "render",
              value: function() {
                  return f.createElement(b, t({}, this.props, {
                      ref: v,
                      style: this.props.style,
                      onPageScroll: this._onPageScroll,
                      onPageScrollStateChanged: this._onPageScrollStateChanged,
                      onPageSelected: this._onPageSelected,
                      children: this._childrenWithOverridenStyle(),
                      __source: {
                          fileName: "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/ViewPager/ViewPagerAndroid.android.js",
                          lineNumber: 264
                      }
                  }))
              }
          }]), h
      })(f.Component);
  m.exports = O
}