module.exports = function(g, r, i, a, m, e, d) {
  'use strict';
  var t = r(d[0]),
      o = r(d[1]),
      n = r(d[2]),
      s = r(d[3]),
      l = r(d[4]),
      u = r(d[5]),
      c = r(d[6]),
      h = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js",
      f = r(d[7]),
      y = r(d[8]),
      b = (r(d[9]), r(d[10])),
      _ = r(d[11]),
      v = r(d[12]),
      p = (function(p) {
          function k(t) {
              var o;
              return n(this, k), (o = l(this, u(k).call(this, t)))._frame = null, o._subscriptions = [], o._initialFrameHeight = 0, o._onKeyboardChange = function(t) {
                  if (null != t) {
                      var n = t.duration,
                          s = t.easing,
                          l = t.endCoordinates,
                          u = o._relativeKeyboardHeight(l);
                      o.state.bottom !== u && (n && s && y.configureNext({
                          duration: n > 10 ? n : 10,
                          update: {
                              duration: n > 10 ? n : 10,
                              type: y.Types[s] || 'keyboard'
                          }
                      }), o.setState({
                          bottom: u
                      }))
                  } else o.setState({
                      bottom: 0
                  })
              }, o._onLayout = function(t) {
                  o._frame = t.nativeEvent.layout, o._initialFrameHeight || (o._initialFrameHeight = o._frame.height)
              }, o.state = {
                  bottom: 0
              }, o.viewRef = b.createRef(), o
          }
          return c(k, p), s(k, [{
              key: "_relativeKeyboardHeight",
              value: function(t) {
                  var o = this._frame;
                  if (!o || !t) return 0;
                  var n = t.screenY - this.props.keyboardVerticalOffset;
                  return Math.max(o.y + o.height - n, 0)
              }
          }, {
              key: "componentDidMount",
              value: function() {
                  this._subscriptions = [f.addListener('keyboardDidHide', this._onKeyboardChange), f.addListener('keyboardDidShow', this._onKeyboardChange)]
              }
          }, {
              key: "componentWillUnmount",
              value: function() {
                  this._subscriptions.forEach(function(t) {
                      t.remove()
                  })
              }
          }, {
              key: "render",
              value: function() {
                  var n = this.props,
                      s = n.behavior,
                      l = n.children,
                      u = n.contentContainerStyle,
                      c = n.enabled,
                      f = (n.keyboardVerticalOffset, n.style),
                      y = o(n, ["behavior", "children", "contentContainerStyle", "enabled", "keyboardVerticalOffset", "style"]),
                      p = c ? this.state.bottom : 0;
                  switch (s) {
                      case 'height':
                          var k;
                          return null != this._frame && this.state.bottom > 0 && (k = {
                              height: this._initialFrameHeight - p,
                              flex: 0
                          }), b.createElement(v, t({
                              ref: this.viewRef,
                              style: _.compose(f, k),
                              onLayout: this._onLayout
                          }, y, {
                              __source: {
                                  fileName: h,
                                  lineNumber: 167
                              }
                          }), l);
                      case 'position':
                          return b.createElement(v, t({
                              ref: this.viewRef,
                              style: f,
                              onLayout: this._onLayout
                          }, y, {
                              __source: {
                                  fileName: h,
                                  lineNumber: 181
                              }
                          }), b.createElement(v, {
                              style: _.compose(u, {
                                  bottom: p
                              }),
                              __source: {
                                  fileName: h,
                                  lineNumber: 186
                              }
                          }, l));
                      case 'padding':
                          return b.createElement(v, t({
                              ref: this.viewRef,
                              style: _.compose(f, {
                                  paddingBottom: p
                              }),
                              onLayout: this._onLayout
                          }, y, {
                              __source: {
                                  fileName: h,
                                  lineNumber: 200
                              }
                          }), l);
                      default:
                          return b.createElement(v, t({
                              ref: this.viewRef,
                              onLayout: this._onLayout,
                              style: f
                          }, y, {
                              __source: {
                                  fileName: h,
                                  lineNumber: 214
                              }
                          }), l)
                  }
              }
          }]), k
      })(b.Component);
  p.defaultProps = {
      enabled: !0,
      keyboardVerticalOffset: 0
  }, m.exports = p
}