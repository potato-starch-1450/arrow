module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = function(t, n, N, b) {
      var E, A = (0, _.default)({}, n, N),
          C = (0, I.default)(t, n, null, b);
      return (E = (function(t) {
          function _() {
              var t;
              return (0, s.default)(this, _), (t = (0, f.default)(this, (0, c.default)(_).apply(this, arguments)))._mounted = !1, t.state = {
                  fontIsLoaded: v.isLoaded(n)
              }, t
          }
          return (0, p.default)(_, t), (0, l.default)(_, [{
              key: "componentWillMount",
              value: function() {
                  return u.default.async(function(t) {
                      for (;;) switch (t.prev = t.next) {
                          case 0:
                              if (this._mounted = !0, this.state.fontIsLoaded) {
                                  t.next = 5;
                                  break
                              }
                              return t.next = 4, u.default.awrap(v.loadAsync(A));
                          case 4:
                              this._mounted && this.setState({
                                  fontIsLoaded: !0
                              });
                          case 5:
                          case "end":
                              return t.stop()
                      }
                  }, null, this)
              }
          }, {
              key: "componentWillUnmount",
              value: function() {
                  this._mounted = !1
              }
          }, {
              key: "setNativeProps",
              value: function(t) {
                  this._icon && this._icon.setNativeProps(t)
              }
          }, {
              key: "render",
              value: function() {
                  var t = this;
                  return this.state.fontIsLoaded ? h.default.createElement(C, (0, o.default)({
                      ref: function(n) {
                          t._icon = n
                      }
                  }, this.props, {
                      __source: {
                          fileName: O,
                          lineNumber: 38
                      }
                  })) : h.default.createElement(y.Text, {
                      __source: {
                          fileName: O,
                          lineNumber: 36
                      }
                  })
              }
          }]), _
      })(h.default.Component)).propTypes = C.propTypes, E.defaultProps = C.defaultProps, E.Button = (0, L.default)(E), E.glyphMap = t, E.getRawGlyphMap = function() {
          return t
      }, E.getFontFamily = function() {
          return n
      }, E.loadFont = function() {
          return v.loadAsync(A)
      }, E.font = A, E
  }, Object.defineProperty(e, "DEFAULT_ICON_COLOR", {
      enumerable: !0,
      get: function() {
          return I.DEFAULT_ICON_COLOR
      }
  }), Object.defineProperty(e, "DEFAULT_ICON_SIZE", {
      enumerable: !0,
      get: function() {
          return I.DEFAULT_ICON_SIZE
      }
  });
  var o = t(r(d[2])),
      u = t(r(d[3])),
      s = t(r(d[4])),
      l = t(r(d[5])),
      f = t(r(d[6])),
      c = t(r(d[7])),
      p = t(r(d[8])),
      _ = t(r(d[9])),
      h = t(r(d[10])),
      y = r(d[11]),
      v = n(r(d[12])),
      I = n(r(d[13])),
      L = t(r(d[14])),
      O = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/@expo/vector-icons/build/createIconSet.js"
}