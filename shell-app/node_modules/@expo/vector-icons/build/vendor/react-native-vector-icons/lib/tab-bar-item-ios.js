module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = function(t, n) {
      var h, v;
      return v = h = (function(t) {
          function h() {
              var t, n;
              (0, u.default)(this, h);
              for (var o = arguments.length, c = new Array(o), s = 0; s < o; s++) c[s] = arguments[s];
              return (n = (0, l.default)(this, (t = (0, f.default)(h)).call.apply(t, [this].concat(c)))).state = {
                  icon: void 0,
                  selectedIcon: void 0
              }, n
          }
          return (0, p.default)(h, t), (0, s.default)(h, [{
              key: "componentDidMount",
              value: function() {
                  this.updateIconSource(), this.updateSelectedIconSource()
              }
          }, {
              key: "componentDidUpdate",
              value: function(t) {
                  C(t, this.props) || this.updateIconSource(), w(t, this.props) || this.updateSelectedIconSource()
              }
          }, {
              key: "updateIconSource",
              value: function() {
                  var t, o, u, s, l;
                  return c.default.async(function(f) {
                      for (;;) switch (f.prev = f.next) {
                          case 0:
                              if (t = this.props, o = t.iconName, u = t.iconSize, s = t.iconColor, !o) {
                                  f.next = 8;
                                  break
                              }
                              return f.next = 4, c.default.awrap(n(o, u, s));
                          case 4:
                              l = f.sent, this.setState({
                                  icon: l
                              }), f.next = 9;
                              break;
                          case 8:
                              this.state.icon && this.setState({
                                  icon: void 0
                              });
                          case 9:
                          case "end":
                              return f.stop()
                      }
                  }, null, this)
              }
          }, {
              key: "updateSelectedIconSource",
              value: function() {
                  var t, o, u, s, l, f, p;
                  return c.default.async(function(h) {
                      for (;;) switch (h.prev = h.next) {
                          case 0:
                              if (t = this.props, o = t.iconName, u = t.iconColor, s = t.iconSize, l = t.selectedIconName, f = t.selectedIconColor, !l && !f) {
                                  h.next = 8;
                                  break
                              }
                              return h.next = 4, c.default.awrap(n(l || o, s, f || u));
                          case 4:
                              p = h.sent, this.setState({
                                  selectedIcon: p
                              }), h.next = 9;
                              break;
                          case 8:
                              this.state.selectedIcon && this.setState({
                                  selectedIcon: void 0
                              });
                          case 9:
                          case "end":
                              return h.stop()
                      }
                  }, null, this)
              }
          }, {
              key: "render",
              value: function() {
                  return S.default.createElement(b.TabBarIOS.Item, (0, o.default)({}, this.state, this.props, {
                      __source: {
                          fileName: y,
                          lineNumber: 93
                      }
                  }))
              }
          }]), h
      })(S.PureComponent), h.propTypes = {
          iconName: t.isRequired,
          selectedIconName: t,
          iconSize: I.default.number,
          iconColor: I.default.oneOfType([I.default.string, I.default.number]),
          selectedIconColor: I.default.oneOfType([I.default.string, I.default.number])
      }, h.defaultProps = {
          iconSize: 30
      }, v
  };
  var o = t(r(d[2])),
      c = t(r(d[3])),
      u = t(r(d[4])),
      s = t(r(d[5])),
      l = t(r(d[6])),
      f = t(r(d[7])),
      p = t(r(d[8])),
      h = t(r(d[9])),
      v = t(r(d[10])),
      S = n(r(d[11])),
      I = t(r(d[12])),
      b = r(d[13]),
      y = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/tab-bar-item-ios.js",
      k = ['iconName', 'iconSize', 'iconColor'],
      x = [].concat(k, ['selectedIconName', 'selectedIconColor']),
      N = function(t) {
          return function(n, o) {
              return (0, h.default)((0, v.default)(n, t), (0, v.default)(o, t))
          }
      },
      C = N(k),
      w = N(x)
}