module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var n = t(r(d[1])),
      l = t(r(d[2])),
      u = t(r(d[3])),
      o = t(r(d[4])),
      s = t(r(d[5])),
      c = t(r(d[6])),
      f = t(r(d[7])),
      v = t(r(d[8])),
      p = r(d[9]),
      w = r(d[10]),
      h = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/@react-navigation/native/src/ResourceSavingSceneView.js",
      _ = (function(t) {
          function _(t) {
              var n;
              return (0, u.default)(this, _), (n = (0, o.default)(this, (0, s.default)(_).call(this)))._mustAlwaysBeVisible = function() {
                  return n.props.animationEnabled || n.props.swipeEnabled
              }, n.state = {
                  awake: !t.lazy || t.isFocused
              }, n
          }
          return (0, f.default)(_, t), (0, c.default)(_, null, [{
              key: "getDerivedStateFromProps",
              value: function(t, n) {
                  return t.isFocused && !n.awake ? {
                      awake: !0
                  } : null
              }
          }]), (0, c.default)(_, [{
              key: "render",
              value: function() {
                  var t = this.state.awake,
                      u = this.props,
                      o = u.isFocused,
                      s = u.childNavigation,
                      c = u.removeClippedSubviews,
                      f = (0, l.default)(u, ["isFocused", "childNavigation", "removeClippedSubviews"]);
                  return v.default.createElement(p.View, {
                      style: b.container,
                      collapsable: !1,
                      removeClippedSubviews: 'android' === p.Platform.OS ? c : !o && c,
                      __source: {
                          fileName: h,
                          lineNumber: 34
                      }
                  }, v.default.createElement(p.View, {
                      style: this._mustAlwaysBeVisible() || o ? b.innerAttached : b.innerDetached,
                      __source: {
                          fileName: h,
                          lineNumber: 43
                      }
                  }, t ? v.default.createElement(w.SceneView, (0, n.default)({}, f, {
                      navigation: s,
                      __source: {
                          fileName: h,
                          lineNumber: 50
                      }
                  })) : null))
              }
          }]), _
      })(v.default.PureComponent),
      b = p.StyleSheet.create({
          container: {
              flex: 1,
              overflow: 'hidden'
          },
          innerAttached: {
              flex: 1
          },
          innerDetached: {
              flex: 1,
              top: 3e3
          }
      }),
      y = _;
  e.default = y
}