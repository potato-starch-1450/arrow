module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var o = t(r(d[2])),
      s = t(r(d[3])),
      l = t(r(d[4])),
      u = t(r(d[5])),
      c = t(r(d[6])),
      f = t(r(d[7])),
      p = t(r(d[8])),
      v = n(r(d[9])),
      h = (t(r(d[10])), r(d[11])),
      w = t(r(d[12])),
      y = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-ratings/src/TapRating.js",
      S = (function(t) {
          function n() {
              var t;
              return (0, s.default)(this, n), (t = (0, u.default)(this, (0, c.default)(n).call(this))).state = {
                  position: 5
              }, t
          }
          return (0, f.default)(n, t), (0, l.default)(n, [{
              key: "componentDidMount",
              value: function() {
                  var t = this.props.defaultRating;
                  this.setState({
                      position: t
                  })
              }
          }, {
              key: "componentWillReceiveProps",
              value: function(t) {
                  t.defaultRating !== this.props.defaultRating && this.setState({
                      position: t.defaultRating
                  })
              }
          }, {
              key: "renderStars",
              value: function(t) {
                  return p.default.map(t, function(t, n) {
                      return t
                  })
              }
          }, {
              key: "starSelectedInPosition",
              value: function(t) {
                  (0, this.props.onFinishRating)(t), this.setState({
                      position: t
                  })
              }
          }, {
              key: "render",
              value: function() {
                  var t = this,
                      n = this.state.position,
                      s = this.props,
                      l = s.count,
                      u = s.reviews,
                      c = s.showRating,
                      f = s.reviewColor,
                      S = s.reviewSize,
                      R = [];
                  return p.default.times(l, function(s) {
                      R.push(v.default.createElement(w.default, (0, o.default)({
                          key: s,
                          position: s + 1,
                          starSelectedInPosition: t.starSelectedInPosition.bind(t),
                          fill: n >= s + 1
                      }, t.props, {
                          __source: {
                              fileName: y,
                              lineNumber: 62
                          }
                      })))
                  }), v.default.createElement(h.View, {
                      style: _.ratingContainer,
                      __source: {
                          fileName: y,
                          lineNumber: 73
                      }
                  }, c && v.default.createElement(h.Text, {
                      style: [_.reviewText, {
                          fontSize: S,
                          color: f
                      }],
                      __source: {
                          fileName: y,
                          lineNumber: 75
                      }
                  }, u[n - 1]), v.default.createElement(h.View, {
                      style: _.starContainer,
                      __source: {
                          fileName: y,
                          lineNumber: 79
                      }
                  }, this.renderStars(R)))
              }
          }]), n
      })(v.Component);
  e.default = S, S.defaultProps = {
      defaultRating: 3,
      reviews: ["Terrible", "Bad", "Okay", "Good", "Great"],
      count: 5,
      onFinishRating: function() {
          return console.log('Rating selected. Attach a function here.')
      },
      showRating: !0,
      reviewColor: 'rgba(230, 196, 46, 1)',
      reviewSize: 25
  };
  var _ = h.StyleSheet.create({
      ratingContainer: {
          backgroundColor: 'transparent',
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
      },
      reviewText: {
          fontWeight: 'bold',
          margin: 10
      },
      starContainer: {
          flexDirection: 'row',
          alignItems: 'center',
          justifyContent: 'center'
      }
  })
}