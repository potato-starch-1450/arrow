module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var o = t(r(d[2])),
      l = t(r(d[3])),
      u = t(r(d[4])),
      s = t(r(d[5])),
      c = t(r(d[6])),
      f = t(r(d[7])),
      p = t(r(d[8])),
      y = t(r(d[9])),
      h = n(r(d[10])),
      w = t(r(d[11])),
      b = r(d[12]),
      v = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-ratings/src/SwipeRating.js",
      C = {
          star: {
              source: r(d[13]),
              color: '#f1c40f',
              backgroundColor: 'white'
          },
          heart: {
              source: r(d[14]),
              color: '#e74c3c',
              backgroundColor: 'white'
          },
          rocket: {
              source: r(d[15]),
              color: '#2ecc71',
              backgroundColor: 'white'
          },
          bell: {
              source: r(d[16]),
              color: '#f39c12',
              backgroundColor: 'white'
          }
      },
      R = (function(t) {
          function n(t) {
              var o;
              (0, u.default)(this, n);
              var l = (o = (0, c.default)(this, (0, f.default)(n).call(this, t))).props,
                  s = l.onStartRating,
                  p = l.onFinishRating,
                  y = l.fractions,
                  h = new b.Animated.ValueXY,
                  w = b.PanResponder.create({
                      onStartShouldSetPanResponder: function() {
                          return !0
                      },
                      onPanResponderGrant: function() {
                          'function' == typeof s && s()
                      },
                      onPanResponderMove: function(t, n) {
                          var l = new b.Animated.ValueXY;
                          l.setValue({
                              x: n.dx,
                              y: 0
                          }), o.setState({
                              position: l,
                              value: n.dx
                          })
                      },
                      onPanResponderRelease: function(t) {
                          var n = o.getCurrentRating(o.state.value);
                          n >= o.props.minValue && (y || o.setCurrentRating(n), p(n))
                      }
                  });
              return o.state = {
                  panResponder: w,
                  position: h,
                  display: !1
              }, o
          }
          return (0, p.default)(n, t), (0, s.default)(n, [{
              key: "componentDidMount",
              value: function() {
                  return l.default.async(function(t) {
                      for (;;) switch (t.prev = t.next) {
                          case 0:
                              return t.prev = 0, t.next = 3, l.default.awrap(r(d[13]));
                          case 3:
                              return t.sent, t.next = 6, l.default.awrap(r(d[14]));
                          case 6:
                              return t.sent, t.next = 9, l.default.awrap(r(d[15]));
                          case 9:
                              return t.sent, t.next = 12, l.default.awrap(r(d[16]));
                          case 12:
                              t.sent, this.setState({
                                  display: !0
                              }), t.next = 19;
                              break;
                          case 16:
                              t.prev = 16, t.t0 = t.catch(0), console.log(t.t0);
                          case 19:
                              this.setCurrentRating(this.props.startingValue);
                          case 20:
                          case "end":
                              return t.stop()
                      }
                  }, null, this, [
                      [0, 16]
                  ])
              }
          }, {
              key: "componentWillReceiveProps",
              value: function(t) {
                  t.startingValue !== this.props.startingValue && this.setCurrentRating(t.startingValue)
              }
          }, {
              key: "getPrimaryViewStyle",
              value: function() {
                  var t = this.state.position,
                      n = this.props,
                      o = n.imageSize,
                      l = n.ratingCount,
                      u = n.type,
                      s = C[u].color,
                      c = t.x.interpolate({
                          inputRange: [o / 2 * -l, 0, l * (o / 2)],
                          outputRange: [0, l * o / 2, l * o],
                          extrapolate: 'clamp'
                      }, {
                          useNativeDriver: !0
                      });
                  return {
                      backgroundColor: s,
                      width: c,
                      height: c ? o : 0
                  }
              }
          }, {
              key: "getSecondaryViewStyle",
              value: function() {
                  var t = this.state.position,
                      n = this.props,
                      o = n.imageSize,
                      l = n.ratingCount,
                      u = n.type,
                      s = C[u].backgroundColor,
                      c = t.x.interpolate({
                          inputRange: [o / 2 * -l, 0, l * (o / 2)],
                          outputRange: [l * o, l * o / 2, 0],
                          extrapolate: 'clamp'
                      }, {
                          useNativeDriver: !0
                      });
                  return {
                      backgroundColor: s,
                      width: c,
                      height: c ? o : 0
                  }
              }
          }, {
              key: "renderRatings",
              value: function() {
                  var t = this.props,
                      n = t.imageSize,
                      o = t.ratingCount,
                      l = t.type,
                      u = t.tintColor,
                      s = C[l].source;
                  return (0, y.default)(o, function(t) {
                      return h.default.createElement(b.View, {
                          key: t,
                          style: x.starContainer,
                          __source: {
                              fileName: v,
                              lineNumber: 158
                          }
                      }, h.default.createElement(b.Image, {
                          source: s,
                          style: {
                              width: n,
                              height: n,
                              tintColor: u
                          },
                          __source: {
                              fileName: v,
                              lineNumber: 159
                          }
                      }))
                  })
              }
          }, {
              key: "getCurrentRating",
              value: function(t) {
                  var n = this.props,
                      o = n.fractions,
                      l = n.imageSize,
                      u = n.ratingCount,
                      s = u / 2,
                      c = this.props.minValue ? this.props.minValue : 0;
                  return t > u * l / 2 ? c = u : t < -u * l / 2 ? c = this.props.minValue ? this.props.minValue : 0 : t < l || t > l ? (c = s + t / l, c = o ? +c.toFixed(o) : Math.ceil(c)) : c = o ? +s.toFixed(o) : Math.ceil(s), c
              }
          }, {
              key: "setCurrentRating",
              value: function(t) {
                  var n = this.props,
                      o = n.imageSize,
                      l = n.ratingCount,
                      u = null;
                  u = t > l ? l * o / 2 : t < 0 ? -l * o / 2 : t < l / 2 || t > l / 2 ? (t - l / 2) * o : 0;
                  var s = new b.Animated.ValueXY;
                  s.setValue({
                      x: u,
                      y: 0
                  }), this.setState({
                      position: s,
                      value: u
                  })
              }
          }, {
              key: "displayCurrentRating",
              value: function() {
                  var t = this.props,
                      n = t.ratingCount,
                      o = t.type,
                      l = t.readonly,
                      u = t.ratingTextColor || C[o].color;
                  return h.default.createElement(b.View, {
                      style: x.showRatingView,
                      __source: {
                          fileName: v,
                          lineNumber: 213
                      }
                  }, h.default.createElement(b.View, {
                      style: x.ratingView,
                      __source: {
                          fileName: v,
                          lineNumber: 214
                      }
                  }, h.default.createElement(b.Text, {
                      style: [x.ratingText, {
                          color: u
                      }],
                      __source: {
                          fileName: v,
                          lineNumber: 215
                      }
                  }, "Rating:", ' '), h.default.createElement(b.Text, {
                      style: [x.currentRatingText, {
                          color: u
                      }],
                      __source: {
                          fileName: v,
                          lineNumber: 216
                      }
                  }, this.getCurrentRating(this.state.value)), h.default.createElement(b.Text, {
                      style: [x.maxRatingText, {
                          color: u
                      }],
                      __source: {
                          fileName: v,
                          lineNumber: 217
                      }
                  }, "/", n)), h.default.createElement(b.View, {
                      __source: {
                          fileName: v,
                          lineNumber: 219
                      }
                  }, l && h.default.createElement(b.Text, {
                      style: [x.readonlyLabel, {
                          color: u
                      }],
                      __source: {
                          fileName: v,
                          lineNumber: 219
                      }
                  }, "(readonly)")))
              }
          }, {
              key: "render",
              value: function() {
                  var t = this.props,
                      n = t.readonly,
                      l = t.type,
                      u = t.ratingImage,
                      s = t.ratingColor,
                      c = t.ratingBackgroundColor,
                      f = t.style,
                      p = t.showRating;
                  if ('custom' === l) {
                      var y = {
                          source: u,
                          color: s,
                          backgroundColor: c
                      };
                      C.custom = y
                  }
                  return this.state.display ? h.default.createElement(b.View, {
                      pointerEvents: n ? 'none' : 'auto',
                      style: f,
                      __source: {
                          fileName: v,
                          lineNumber: 238
                      }
                  }, p && this.displayCurrentRating(), h.default.createElement(b.View, (0, o.default)({
                      style: x.starsWrapper
                  }, this.state.panResponder.panHandlers, {
                      __source: {
                          fileName: v,
                          lineNumber: 240
                      }
                  }), h.default.createElement(b.View, {
                      style: x.starsInsideWrapper,
                      __source: {
                          fileName: v,
                          lineNumber: 241
                      }
                  }, h.default.createElement(b.Animated.View, {
                      style: this.getPrimaryViewStyle(),
                      __source: {
                          fileName: v,
                          lineNumber: 242
                      }
                  }), h.default.createElement(b.Animated.View, {
                      style: this.getSecondaryViewStyle(),
                      __source: {
                          fileName: v,
                          lineNumber: 243
                      }
                  })), this.renderRatings())) : null
              }
          }]), n
      })(h.Component);
  e.default = R, R.defaultProps = {
      type: 'star',
      ratingImage: r(d[13]),
      ratingColor: '#f1c40f',
      ratingBackgroundColor: 'white',
      ratingCount: 5,
      imageSize: 40,
      onFinishRating: function() {
          return console.log('Attach a onFinishRating function here.')
      },
      minValue: 0
  };
  var x = b.StyleSheet.create({
      starsWrapper: {
          flexDirection: 'row',
          justifyContent: 'center',
          alignItems: 'center'
      },
      starsInsideWrapper: {
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          flexDirection: 'row',
          justifyContent: 'center',
          alignItems: 'center'
      },
      showRatingView: {
          flexDirection: 'column',
          justifyContent: 'center',
          alignItems: 'center',
          paddingBottom: 5
      },
      ratingView: {
          flexDirection: 'row',
          justifyContent: 'center',
          alignItems: 'center',
          paddingBottom: 5
      },
      ratingText: {
          fontSize: 15,
          textAlign: 'center',
          fontFamily: 'ios' === b.Platform.OS ? 'Trebuchet MS' : null,
          color: '#34495e'
      },
      readonlyLabel: {
          justifyContent: 'center',
          alignItems: 'center',
          fontSize: 12,
          textAlign: 'center',
          fontFamily: 'ios' === b.Platform.OS ? 'Trebuchet MS' : null,
          color: '#34495a'
      },
      currentRatingText: {
          fontSize: 30,
          textAlign: 'center',
          fontFamily: 'ios' === b.Platform.OS ? 'Trebuchet MS' : null
      },
      maxRatingText: {
          fontSize: 18,
          textAlign: 'center',
          fontFamily: 'ios' === b.Platform.OS ? 'Trebuchet MS' : null,
          color: '#34495e'
      }
  });
  R.propTypes = {
      type: w.default.string,
      ratingImage: b.Image.propTypes.source,
      ratingColor: w.default.string,
      ratingBackgroundColor: w.default.string,
      ratingCount: w.default.number,
      ratingTextColor: w.default.string,
      imageSize: w.default.number,
      onStartRating: w.default.func,
      onFinishRating: w.default.func,
      showRating: w.default.bool,
      style: b.ViewPropTypes.style,
      readonly: w.default.bool,
      startingValue: w.default.number,
      fractions: function(t, n, o) {
          if (t[n]) {
              var l = t[n];
              return 'number' == typeof l ? l >= 0 && l <= 20 ? null : new Error("`" + n + "` in `" + o + "` must be between 0 and 20") : new Error("`" + n + "` in `" + o + "` must be a number")
          }
      },
      minValue: w.default.number
  }
}