module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.Input = void 0;
  var n = t(r(d[1])),
      l = t(r(d[2])),
      o = t(r(d[3])),
      u = t(r(d[4])),
      s = t(r(d[5])),
      c = t(r(d[6])),
      p = t(r(d[7])),
      f = t(r(d[8])),
      y = t(r(d[9])),
      b = t(r(d[10])),
      h = t(r(d[11])),
      S = r(d[12]),
      I = r(d[13]),
      P = r(d[14]),
      v = t(r(d[15])),
      w = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/input/Input.js";

  function C(t, n) {
      var l = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(t);
          n && (o = o.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), l.push.apply(l, o)
      }
      return l
  }

  function _(t) {
      for (var n = 1; n < arguments.length; n++) {
          var l = null != arguments[n] ? arguments[n] : {};
          n % 2 ? C(l, !0).forEach(function(n) {
              (0, y.default)(t, n, l[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : C(l).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(l, n))
          })
      }
      return t
  }
  var T = (function(t) {
      function y() {
          var t, n;
          (0, o.default)(this, y);
          for (var l = arguments.length, u = new Array(l), f = 0; f < l; f++) u[f] = arguments[f];
          return (n = (0, s.default)(this, (t = (0, c.default)(y)).call.apply(t, [this].concat(u)))).shakeAnimationValue = new S.Animated.Value(0), n.shake = function() {
              var t = (0, p.default)(n).shakeAnimationValue;
              t.setValue(0), S.Animated.timing(t, {
                  duration: 375,
                  toValue: 3,
                  ease: S.Easing.bounce
              }).start()
          }, n
      }
      return (0, f.default)(y, t), (0, u.default)(y, [{
          key: "focus",
          value: function() {
              this.input.focus()
          }
      }, {
          key: "blur",
          value: function() {
              this.input.blur()
          }
      }, {
          key: "clear",
          value: function() {
              this.input.clear()
          }
      }, {
          key: "isFocused",
          value: function() {
              return this.input.isFocused()
          }
      }, {
          key: "setNativeProps",
          value: function(t) {
              this.input.setNativeProps(t)
          }
      }, {
          key: "render",
          value: function() {
              var t, o, u, s = this,
                  c = this.props,
                  p = c.containerStyle,
                  f = c.disabled,
                  y = c.disabledInputStyle,
                  h = c.inputContainerStyle,
                  P = c.leftIcon,
                  C = c.leftIconContainerStyle,
                  T = c.rightIcon,
                  O = c.rightIconContainerStyle,
                  j = c.inputComponent,
                  V = void 0 === j ? S.TextInput : j,
                  k = c.inputStyle,
                  x = c.errorProps,
                  E = c.errorStyle,
                  A = c.errorMessage,
                  D = c.label,
                  z = c.labelStyle,
                  M = c.labelProps,
                  R = c.theme,
                  F = (0, l.default)(c, ["containerStyle", "disabled", "disabledInputStyle", "inputContainerStyle", "leftIcon", "leftIconContainerStyle", "rightIcon", "rightIconContainerStyle", "inputComponent", "inputStyle", "errorProps", "errorStyle", "errorMessage", "label", "labelStyle", "labelProps", "theme"]),
                  H = this.shakeAnimationValue.interpolate({
                      inputRange: [0, .5, 1, 1.5, 2, 2.5, 3],
                      outputRange: [0, -15, 0, 15, 0, -15, 0]
                  });
              return b.default.createElement(S.View, {
                  style: S.StyleSheet.flatten([N.container, p]),
                  __source: {
                      fileName: w,
                      lineNumber: 88
                  }
              }, (t = D, o = _({
                  style: z
              }, M), u = N.label(R), (0, I.renderNode)(S.Text, t, _({}, o, {
                  style: S.StyleSheet.flatten([u, o && o.style])
              }))), b.default.createElement(S.Animated.View, {
                  style: S.StyleSheet.flatten([N.inputContainer(R), h, {
                      transform: [{
                          translateX: H
                      }]
                  }]),
                  __source: {
                      fileName: w,
                      lineNumber: 95
                  }
              }, P && b.default.createElement(S.View, {
                  style: S.StyleSheet.flatten([N.iconContainer, C]),
                  __source: {
                      fileName: w,
                      lineNumber: 103
                  }
              }, (0, I.renderNode)(v.default, P)), b.default.createElement(V, (0, n.default)({
                  testID: "RNE__Input__text-input",
                  underlineColorAndroid: "transparent",
                  editable: !f
              }, F, {
                  ref: function(t) {
                      s.input = t
                  },
                  style: S.StyleSheet.flatten([N.input, k, f && N.disabledInput, f && y]),
                  __source: {
                      fileName: w,
                      lineNumber: 113
                  }
              })), T && b.default.createElement(S.View, {
                  style: S.StyleSheet.flatten([N.iconContainer, O]),
                  __source: {
                      fileName: w,
                      lineNumber: 130
                  }
              }, (0, I.renderNode)(v.default, T))), !!A && b.default.createElement(S.Text, (0, n.default)({}, x, {
                  style: S.StyleSheet.flatten([N.error(R), E && E]),
                  __source: {
                      fileName: w,
                      lineNumber: 142
                  }
              }), A))
          }
      }]), y
  })(b.default.Component);
  e.Input = T, T.propTypes = {
      containerStyle: P.ViewPropTypes.style,
      disabled: h.default.bool,
      disabledInputStyle: P.TextPropTypes.style,
      inputContainerStyle: P.ViewPropTypes.style,
      leftIcon: I.nodeType,
      leftIconContainerStyle: P.ViewPropTypes.style,
      rightIcon: I.nodeType,
      rightIconContainerStyle: P.ViewPropTypes.style,
      inputStyle: P.TextPropTypes.style,
      inputComponent: h.default.elementType,
      errorProps: h.default.object,
      errorStyle: P.TextPropTypes.style,
      errorMessage: h.default.string,
      label: h.default.node,
      labelStyle: P.TextPropTypes.style,
      labelProps: h.default.object,
      theme: h.default.object
  };
  var N = {
          container: {
              width: '100%',
              paddingHorizontal: 10
          },
          disabledInput: {
              opacity: .5
          },
          inputContainer: function(t) {
              return {
                  flexDirection: 'row',
                  borderBottomWidth: 1,
                  alignItems: 'center',
                  borderColor: t.colors.grey3
              }
          },
          iconContainer: {
              height: 40,
              justifyContent: 'center',
              alignItems: 'center',
              marginLeft: 15
          },
          input: {
              alignSelf: 'center',
              color: 'black',
              fontSize: 18,
              flex: 1,
              minHeight: 40
          },
          error: function(t) {
              return {
                  margin: 5,
                  fontSize: 12,
                  color: t.colors.error
              }
          },
          label: function(t) {
              return _({
                  fontSize: 16,
                  color: t.colors.grey3
              }, S.Platform.select({
                  android: _({}, P.fonts.android.bold),
                  default: {
                      fontWeight: 'bold'
                  }
              }))
          }
      },
      O = (0, P.withTheme)(T, 'Input');
  e.default = O
}