module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.CheckBox = void 0;
  var o = t(r(d[1])),
      n = t(r(d[2])),
      l = t(r(d[3])),
      c = t(r(d[4])),
      f = t(r(d[5])),
      u = r(d[6]),
      s = t(r(d[7])),
      p = t(r(d[8])),
      y = r(d[9]),
      h = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/checkbox/CheckBox.js";

  function b(t, o) {
      var n = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(t);
          o && (l = l.filter(function(o) {
              return Object.getOwnPropertyDescriptor(t, o).enumerable
          })), n.push.apply(n, l)
      }
      return n
  }

  function P(t) {
      for (var n = 1; n < arguments.length; n++) {
          var l = null != arguments[n] ? arguments[n] : {};
          n % 2 ? b(l, !0).forEach(function(n) {
              (0, o.default)(t, n, l[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : b(l).forEach(function(o) {
              Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(l, o))
          })
      }
      return t
  }
  var k = function(t) {
      var o = t.theme,
          f = (0, l.default)(t, ["theme"]),
          y = f.Component,
          b = f.checked,
          P = f.iconRight,
          k = f.title,
          w = f.titleProps,
          C = f.center,
          S = f.right,
          T = f.containerStyle,
          j = f.textStyle,
          x = f.wrapperStyle,
          _ = f.onPress,
          v = f.onLongPress,
          N = f.checkedTitle,
          D = f.fontFamily,
          E = f.checkedColor,
          R = void 0 === E ? o.colors.primary : E,
          L = (0, l.default)(f, ["Component", "checked", "iconRight", "title", "titleProps", "center", "right", "containerStyle", "textStyle", "wrapperStyle", "onPress", "onLongPress", "checkedTitle", "fontFamily", "checkedColor"]);
      return c.default.createElement(y, (0, n.default)({}, L, {
          testID: "checkbox",
          onLongPress: v,
          onPress: _,
          style: u.StyleSheet.flatten([O.container, k && O.containerHasTitle, T && T]),
          __source: {
              fileName: h,
              lineNumber: 38
          }
      }), c.default.createElement(u.View, {
          style: u.StyleSheet.flatten([O.wrapper, S && {
              justifyContent: 'flex-end'
          }, C && {
              justifyContent: 'center'
          }, x && x]),
          __source: {
              fileName: h,
              lineNumber: 49
          }
      }, !P && c.default.createElement(p.default, (0, n.default)({}, t, {
          checkedColor: R,
          __source: {
              fileName: h,
              lineNumber: 57
          }
      })), c.default.isValidElement(k) ? k : k && c.default.createElement(s.default, (0, n.default)({
          testID: "checkboxTitle",
          style: u.StyleSheet.flatten([O.text(o), j && j, D && {
              fontFamily: D
          }])
      }, w, {
          __source: {
              fileName: h,
              lineNumber: 62
          }
      }), b && N || k), P && c.default.createElement(p.default, (0, n.default)({}, t, {
          checkedColor: R,
          __source: {
              fileName: h,
              lineNumber: 75
          }
      }))))
  };
  e.CheckBox = k, k.propTypes = P({}, p.default.propTypes, {
      Component: f.default.oneOfType([f.default.object, f.default.func]),
      iconRight: f.default.bool,
      title: f.default.oneOfType([f.default.string, f.default.element]),
      titleProps: f.default.object,
      center: f.default.bool,
      right: f.default.bool,
      containerStyle: y.ViewPropTypes.style,
      wrapperStyle: y.ViewPropTypes.style,
      textStyle: u.Text.propTypes.style,
      onPress: f.default.func,
      onLongPress: f.default.func,
      checkedTitle: f.default.string,
      fontFamily: f.default.string
  }), k.defaultProps = {
      checked: !1,
      iconRight: !1,
      right: !1,
      center: !1,
      uncheckedColor: '#bfbfbf',
      checkedIcon: 'check-square-o',
      uncheckedIcon: 'square-o',
      size: 24,
      Component: u.TouchableOpacity,
      titleProps: {}
  };
  var O = {
          wrapper: {
              flexDirection: 'row',
              alignItems: 'center'
          },
          container: {
              margin: 5,
              marginLeft: 10,
              marginRight: 10,
              padding: 10
          },
          containerHasTitle: {
              borderWidth: 1,
              borderRadius: 3,
              backgroundColor: '#fafafa',
              borderColor: '#ededed'
          },
          text: function(t) {
              return P({
                  marginLeft: 10,
                  marginRight: 10,
                  color: t.colors.grey1
              }, u.Platform.select({
                  android: P({}, y.fonts.android.bold),
                  default: {
                      fontWeight: 'bold'
                  }
              }))
          }
      },
      w = (0, y.withTheme)(k, 'CheckBox');
  e.default = w
}