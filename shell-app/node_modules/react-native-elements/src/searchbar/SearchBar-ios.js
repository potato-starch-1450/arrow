module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      n = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var o = t(r(d[2])),
      l = t(r(d[3])),
      c = t(r(d[4])),
      u = t(r(d[5])),
      s = t(r(d[6])),
      f = t(r(d[7])),
      y = t(r(d[8])),
      p = t(r(d[9])),
      h = t(r(d[10])),
      b = n(r(d[11])),
      S = r(d[12]),
      C = t(r(d[13])),
      T = t(r(d[14])),
      I = t(r(d[15])),
      x = r(d[16]),
      w = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/searchbar/SearchBar-ios.js";

  function v(t, n) {
      var o = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(t);
          n && (l = l.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), o.push.apply(o, l)
      }
      return o
  }

  function B(t) {
      for (var n = 1; n < arguments.length; n++) {
          var l = null != arguments[n] ? arguments[n] : {};
          n % 2 ? v(l, !0).forEach(function(n) {
              (0, o.default)(t, n, l[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : v(l).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(l, n))
          })
      }
      return t
  }
  var N = {
          type: 'ionicon',
          size: 20,
          name: 'ios-search',
          color: "#7d7d7d"
      },
      _ = {
          type: 'ionicon',
          name: 'ios-close-circle',
          size: 20,
          color: "#7d7d7d"
      },
      O = (function(t) {
          function n(t) {
              var o;
              (0, u.default)(this, n), (o = (0, f.default)(this, (0, y.default)(n).call(this, t))).focus = function() {
                  o.input.focus()
              }, o.blur = function() {
                  o.input.blur()
              }, o.clear = function() {
                  o.input.clear(), o.onChangeText(''), o.props.onClear()
              }, o.cancel = function() {
                  o.onChangeText(''), o.props.showCancel && (S.UIManager.configureNextLayoutAnimation && S.LayoutAnimation.easeInEaseOut(), o.setState({
                      hasFocus: !1
                  })), setTimeout(function() {
                      o.blur(), o.props.onCancel()
                  }, 0)
              }, o.onFocus = function() {
                  o.props.onFocus(), S.UIManager.configureNextLayoutAnimation && S.LayoutAnimation.easeInEaseOut(), o.setState({
                      hasFocus: !0,
                      isEmpty: '' === o.props.value
                  })
              }, o.onBlur = function() {
                  o.props.onBlur(), S.UIManager.configureNextLayoutAnimation && S.LayoutAnimation.easeInEaseOut(), o.props.showCancel || o.setState({
                      hasFocus: !1
                  })
              }, o.onChangeText = function(t) {
                  o.props.onChangeText(t), o.setState({
                      isEmpty: '' === t
                  })
              };
              var l = t.value;
              return o.state = {
                  hasFocus: !1,
                  isEmpty: !l || '' === l,
                  cancelButtonWidth: null
              }, o
          }
          return (0, p.default)(n, t), (0, s.default)(n, [{
              key: "render",
              value: function() {
                  var t = this,
                      n = this.props,
                      o = n.cancelButtonProps,
                      u = n.cancelButtonTitle,
                      s = n.clearIcon,
                      f = n.containerStyle,
                      y = n.leftIconContainerStyle,
                      p = n.rightIconContainerStyle,
                      h = n.inputContainerStyle,
                      C = n.inputStyle,
                      v = n.placeholderTextColor,
                      O = n.showLoading,
                      E = n.loadingProps,
                      D = n.searchIcon,
                      L = (n.showCancel, (0, c.default)(n, ["cancelButtonProps", "cancelButtonTitle", "clearIcon", "containerStyle", "leftIconContainerStyle", "rightIconContainerStyle", "inputContainerStyle", "inputStyle", "placeholderTextColor", "showLoading", "loadingProps", "searchIcon", "showCancel"])),
                      j = this.state,
                      F = j.hasFocus,
                      A = j.isEmpty,
                      k = E.style,
                      R = (0, c.default)(E, ["style"]),
                      W = o.buttonStyle,
                      z = o.buttonTextStyle,
                      M = o.color,
                      U = o.disabled,
                      V = o.buttonDisabledStyle,
                      H = o.buttonDisabledTextStyle,
                      q = (0, c.default)(o, ["buttonStyle", "buttonTextStyle", "color", "disabled", "buttonDisabledStyle", "buttonDisabledTextStyle"]);
                  return b.default.createElement(S.View, {
                      style: S.StyleSheet.flatten([P.container, f]),
                      __source: {
                          fileName: w,
                          lineNumber: 130
                      }
                  }, b.default.createElement(T.default, (0, l.default)({
                      testID: "searchInput"
                  }, L, {
                      onFocus: this.onFocus,
                      onBlur: this.onBlur,
                      onChangeText: this.onChangeText,
                      ref: function(n) {
                          t.input = n
                      },
                      inputStyle: S.StyleSheet.flatten([P.input, C]),
                      containerStyle: {
                          paddingHorizontal: 0
                      },
                      inputContainerStyle: S.StyleSheet.flatten([P.inputContainer, F && {
                          marginRight: this.state.cancelButtonWidth
                      }, h]),
                      leftIcon: (0, x.renderNode)(I.default, D, N),
                      leftIconContainerStyle: S.StyleSheet.flatten([P.leftIconContainerStyle, y]),
                      placeholderTextColor: v,
                      rightIcon: b.default.createElement(S.View, {
                          style: {
                              flexDirection: 'row'
                          },
                          __source: {
                              fileName: w,
                              lineNumber: 156
                          }
                      }, O && b.default.createElement(S.ActivityIndicator, (0, l.default)({
                          key: "loading",
                          style: S.StyleSheet.flatten([{
                              marginRight: 5
                          }, k])
                      }, R, {
                          __source: {
                              fileName: w,
                              lineNumber: 158
                          }
                      })), !A && (0, x.renderNode)(I.default, s, B({}, _, {
                          key: 'cancel',
                          onPress: this.clear
                      }))),
                      rightIconContainerStyle: S.StyleSheet.flatten([P.rightIconContainerStyle, p]),
                      __source: {
                          fileName: w,
                          lineNumber: 131
                      }
                  })), b.default.createElement(S.View, {
                      style: S.StyleSheet.flatten([P.cancelButtonContainer, {
                          opacity: null === this.state.cancelButtonWidth ? 0 : 1,
                          right: F ? 0 : -this.state.cancelButtonWidth
                      }]),
                      onLayout: function(n) {
                          return t.setState({
                              cancelButtonWidth: n.nativeEvent.layout.width
                          })
                      },
                      __source: {
                          fileName: w,
                          lineNumber: 178
                      }
                  }, b.default.createElement(S.TouchableOpacity, (0, l.default)({
                      accessibilityRole: "button",
                      onPress: this.cancel,
                      disabled: U
                  }, q, {
                      __source: {
                          fileName: w,
                          lineNumber: 190
                      }
                  }), b.default.createElement(S.View, {
                      style: [W, U && V],
                      __source: {
                          fileName: w,
                          lineNumber: 196
                      }
                  }, b.default.createElement(S.Text, {
                      style: [P.buttonTextStyle, M && {
                          color: M
                      }, z, U && (H || P.buttonTextDisabled)],
                      disabled: U,
                      __source: {
                          fileName: w,
                          lineNumber: 197
                      }
                  }, u)))))
              }
          }]), n
      })(b.Component);
  O.propTypes = {
      value: h.default.string,
      cancelButtonProps: h.default.object,
      cancelButtonTitle: h.default.string,
      clearIcon: x.nodeType,
      searchIcon: x.nodeType,
      loadingProps: h.default.object,
      showLoading: h.default.bool,
      onClear: h.default.func,
      onCancel: h.default.func,
      onFocus: h.default.func,
      onBlur: h.default.func,
      onChangeText: h.default.func,
      containerStyle: C.default.style,
      leftIconContainerStyle: C.default.style,
      rightIconContainerStyle: C.default.style,
      inputContainerStyle: C.default.style,
      inputStyle: S.Text.propTypes.style,
      placeholderTextColor: h.default.string,
      showCancel: h.default.bool
  }, O.defaultProps = {
      value: '',
      cancelButtonTitle: 'Cancel',
      loadingProps: {},
      cancelButtonProps: {},
      showLoading: !1,
      onClear: function() {
          return null
      },
      onCancel: function() {
          return null
      },
      onFocus: function() {
          return null
      },
      onBlur: function() {
          return null
      },
      onChangeText: function() {
          return null
      },
      placeholderTextColor: "#7d7d7d",
      searchIcon: N,
      clearIcon: _,
      showCancel: !1
  };
  var P = S.StyleSheet.create({
          container: {
              backgroundColor: '#f5f5f5',
              paddingBottom: 13,
              paddingTop: 13,
              flexDirection: 'row',
              overflow: 'hidden',
              alignItems: 'center'
          },
          input: {
              marginLeft: 6,
              overflow: 'hidden'
          },
          inputContainer: {
              borderBottomWidth: 0,
              backgroundColor: '#dcdce1',
              borderRadius: 9,
              minHeight: 36,
              marginLeft: 8,
              marginRight: 8
          },
          rightIconContainerStyle: {
              marginRight: 8
          },
          leftIconContainerStyle: {
              marginLeft: 8
          },
          buttonTextStyle: {
              color: '#007aff',
              textAlign: 'center',
              padding: 8,
              fontSize: 18
          },
          buttonTextDisabled: {
              color: '#cdcdcd'
          },
          cancelButtonContainer: {
              position: 'absolute'
          }
      }),
      E = O;
  e.default = E
}