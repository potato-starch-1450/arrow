module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.ListItem = void 0;
  var n = t(r(d[1])),
      l = t(r(d[2])),
      o = t(r(d[3])),
      u = t(r(d[4])),
      f = t(r(d[5])),
      c = r(d[6]),
      s = r(d[7]),
      p = r(d[8]),
      h = t(r(d[9])),
      y = t(r(d[10])),
      b = t(r(d[11])),
      S = t(r(d[12])),
      P = t(r(d[13])),
      C = t(r(d[14])),
      T = t(r(d[15])),
      v = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/list/ListItem.js";

  function w(t, n) {
      var l = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(t);
          n && (o = o.filter(function(n) {
              return Object.getOwnPropertyDescriptor(t, n).enumerable
          })), l.push.apply(l, o)
      }
      return l
  }

  function N(t) {
      for (var n = 1; n < arguments.length; n++) {
          var l = null != arguments[n] ? arguments[n] : {};
          n % 2 ? w(l, !0).forEach(function(n) {
              (0, o.default)(t, n, l[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : w(l).forEach(function(n) {
              Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(l, n))
          })
      }
      return t
  }
  var _ = {
          type: 'ios' === c.Platform.OS ? 'ionicon' : 'material',
          color: '#D1D1D6',
          name: 'ios' === c.Platform.OS ? 'ios-arrow-forward' : 'keyboard-arrow-right',
          size: 16
      },
      j = function(t) {
          return {
              name: 'check',
              size: 20,
              color: t.colors.primary
          }
      },
      O = function(t, n, l) {
          return (0, s.renderNode)(P.default, t, N({}, n, {
              style: c.StyleSheet.flatten([l, n && n.style])
          }))
      },
      E = function(t) {
          return (0, s.renderNode)(h.default, t, {
              size: 40,
              rounded: !0
          })
      },
      x = function(t) {
          return (0, s.renderNode)(S.default, t, {
              color: 'ios' === c.Platform.OS ? null : "rgba(0, 0, 0, 0.54)",
              size: 24
          })
      },
      k = function(t) {
          var o = t.title,
              f = t.titleStyle,
              p = t.titleProps,
              h = t.subtitle,
              w = t.subtitleStyle,
              k = t.subtitleProps,
              V = t.containerStyle,
              L = t.onPress,
              A = t.onLongPress,
              G = t.Component,
              z = void 0 === G ? L || A ? c.TouchableHighlight : c.View : G,
              B = t.leftIcon,
              W = t.leftAvatar,
              R = t.leftElement,
              H = t.rightIcon,
              M = t.rightAvatar,
              U = t.rightElement,
              q = t.rightTitle,
              F = t.rightTitleStyle,
              J = t.rightTitleProps,
              K = t.rightSubtitle,
              Q = t.rightSubtitleStyle,
              X = t.rightSubtitleProps,
              Y = t.input,
              Z = t.buttonGroup,
              $ = t.switch,
              ee = t.checkBox,
              te = t.badge,
              ne = t.chevron,
              le = t.contentContainerStyle,
              re = t.rightContentContainerStyle,
              ie = t.checkmark,
              oe = t.disabled,
              ae = t.disabledStyle,
              ue = t.bottomDivider,
              de = t.topDivider,
              fe = t.pad,
              ce = t.linearGradientProps,
              se = t.ViewComponent,
              pe = void 0 === se ? ce && g.Expo ? g.Expo.LinearGradient : c.View : se,
              he = t.theme,
              ye = (0, l.default)(t, ["title", "titleStyle", "titleProps", "subtitle", "subtitleStyle", "subtitleProps", "containerStyle", "onPress", "onLongPress", "Component", "leftIcon", "leftAvatar", "leftElement", "rightIcon", "rightAvatar", "rightElement", "rightTitle", "rightTitleStyle", "rightTitleProps", "rightSubtitle", "rightSubtitleStyle", "rightSubtitleProps", "input", "buttonGroup", "switch", "checkBox", "badge", "chevron", "contentContainerStyle", "rightContentContainerStyle", "checkmark", "disabled", "disabledStyle", "bottomDivider", "topDivider", "pad", "linearGradientProps", "ViewComponent", "theme"]);
          return u.default.createElement(z, (0, n.default)({}, ye, {
              onPress: L,
              onLongPress: A,
              disabled: oe,
              __source: {
                  fileName: v,
                  lineNumber: 101
              }
          }), u.default.createElement(I, (0, n.default)({
              Component: pe
          }, ce, {
              style: c.StyleSheet.flatten([D.container(he), (Z || $) && {
                  paddingVertical: 8
              }, de && {
                  borderTopWidth: c.StyleSheet.hairlineWidth
              }, ue && {
                  borderBottomWidth: c.StyleSheet.hairlineWidth
              }, V, oe && ae]),
              pad: fe,
              __source: {
                  fileName: v,
                  lineNumber: 107
              }
          }), (0, s.renderNode)(P.default, R), x(B), E(W), (void 0 !== o || h) && u.default.createElement(c.View, {
              style: c.StyleSheet.flatten([D.contentContainer, le]),
              __source: {
                  fileName: v,
                  lineNumber: 125
              }
          }, O(o, N({
              testID: 'listItemTitle'
          }, p), c.StyleSheet.flatten([D.title, f])), O(h, k, c.StyleSheet.flatten([D.subtitle, w]))), (!!q || !!K) && u.default.createElement(c.View, {
              style: c.StyleSheet.flatten([D.rightContentContainer, re]),
              __source: {
                  fileName: v,
                  lineNumber: 145
              }
          }, O(q, J, c.StyleSheet.flatten([D.title, D.rightTitle, F])), O(K, X, c.StyleSheet.flatten([D.subtitle, D.rightSubtitle, Q]))), Y && u.default.createElement(T.default, (0, n.default)({}, Y, {
              inputStyle: c.StyleSheet.flatten([D.input, Y && Y.inputStyle]),
              inputContainerStyle: c.StyleSheet.flatten([D.inputContentContainer, Y && Y.inputContainerStyle]),
              containerStyle: c.StyleSheet.flatten([D.inputContainer, Y && Y.containerStyle]),
              __source: {
                  fileName: v,
                  lineNumber: 174
              }
          })), $ && u.default.createElement(c.Switch, (0, n.default)({}, $, {
              __source: {
                  fileName: v,
                  lineNumber: 190
              }
          })), ee && u.default.createElement(b.default, (0, n.default)({}, ee, {
              containerStyle: c.StyleSheet.flatten([D.checkboxContainer, ee && ee.containerStyle]),
              __source: {
                  fileName: v,
                  lineNumber: 192
              }
          })), te && u.default.createElement(y.default, (0, n.default)({}, te, {
              __source: {
                  fileName: v,
                  lineNumber: 200
              }
          })), Z && u.default.createElement(C.default, (0, n.default)({}, Z, {
              containerStyle: c.StyleSheet.flatten([D.buttonGroupContainer, Z && Z.containerStyle]),
              __source: {
                  fileName: v,
                  lineNumber: 202
              }
          })), E(M), x(H), (0, s.renderNode)(P.default, U), (0, s.renderNode)(S.default, ie, j(he)), (0, s.renderNode)(S.default, ne, _)))
      };
  e.ListItem = k;
  var D = {
      container: function(t) {
          return N({}, c.Platform.select({
              ios: {
                  padding: 14
              },
              default: {
                  padding: 16
              }
          }), {
              flexDirection: 'row',
              alignItems: 'center',
              backgroundColor: 'white',
              borderColor: t.colors.divider
          })
      },
      title: N({
          backgroundColor: 'transparent'
      }, c.Platform.select({
          ios: {
              fontSize: 17
          },
          default: {
              fontSize: 16
          }
      })),
      subtitle: N({
          backgroundColor: 'transparent'
      }, c.Platform.select({
          ios: {
              fontSize: 15
          },
          default: {
              color: "rgba(0, 0, 0, 0.54)",
              fontSize: 14
          }
      })),
      contentContainer: {
          flex: 1,
          justifyContent: 'center'
      },
      rightContentContainer: {
          flex: .5,
          justifyContent: 'center',
          alignItems: 'flex-end'
      },
      inputContainer: {
          flex: 1,
          paddingRight: 0
      },
      inputContentContainer: {
          flex: 1,
          borderBottomWidth: 0,
          width: null,
          height: null
      },
      input: {
          flex: 1,
          textAlign: 'right',
          width: null,
          height: null
      },
      checkboxContainer: {
          margin: 0,
          marginRight: 0,
          marginLeft: 0,
          padding: 0
      },
      buttonGroupContainer: {
          flex: 1,
          marginLeft: 0,
          marginRight: 0,
          marginTop: 0,
          marginBottom: 0
      },
      rightTitle: {
          color: "rgba(0, 0, 0, 0.54)"
      },
      rightSubtitle: {
          color: "rgba(0, 0, 0, 0.54)"
      }
  };
  k.propTypes = {
      containerStyle: p.ViewPropTypes.style,
      contentContainerStyle: p.ViewPropTypes.style,
      rightContentContainerStyle: p.ViewPropTypes.style,
      Component: f.default.func,
      onPress: f.default.func,
      onLongPress: f.default.func,
      title: f.default.oneOfType([f.default.string, f.default.element]),
      titleStyle: p.TextPropTypes.style,
      titleProps: f.default.object,
      subtitle: f.default.oneOfType([f.default.string, f.default.element]),
      subtitleStyle: p.TextPropTypes.style,
      subtitleProps: f.default.object,
      leftIcon: s.nodeType,
      leftAvatar: s.nodeType,
      leftElement: s.nodeType,
      rightIcon: s.nodeType,
      rightAvatar: s.nodeType,
      rightElement: s.nodeType,
      rightTitle: f.default.oneOfType([f.default.string, f.default.element]),
      rightTitleStyle: p.TextPropTypes.style,
      rightTitleProps: f.default.object,
      rightSubtitle: f.default.oneOfType([f.default.string, f.default.element]),
      rightSubtitleStyle: p.TextPropTypes.style,
      rightSubtitleProps: f.default.object,
      input: f.default.object,
      buttonGroup: f.default.object,
      switch: f.default.object,
      checkBox: f.default.object,
      badge: f.default.object,
      chevron: s.nodeType,
      checkmark: s.nodeType,
      disabled: f.default.bool,
      disabledStyle: p.ViewPropTypes.style,
      topDivider: f.default.bool,
      bottomDivider: f.default.bool,
      pad: f.default.number,
      linearGradientProps: f.default.object,
      ViewComponent: f.default.func,
      theme: f.default.object
  }, k.defaultProps = {
      pad: 16,
      title: ''
  };
  var I = function(t) {
      var o = t.children,
          f = t.pad,
          s = t.Component,
          p = (0, l.default)(t, ["children", "pad", "Component"]),
          h = u.default.Children.toArray(o),
          y = h.length,
          b = s || c.View;
      return u.default.createElement(b, (0, n.default)({}, p, {
          __source: {
              fileName: v,
              lineNumber: 356
          }
      }), u.default.Children.map(h, function(t, n) {
          return t && [t, n !== y - 1 && u.default.createElement(c.View, {
              width: f,
              __source: {
                  fileName: v,
                  lineNumber: 360
              }
          })]
      }))
  };
  I.propTypes = {
      children: f.default.node,
      pad: f.default.number,
      Component: f.default.oneOfType([f.default.func, f.default.object])
  };
  var V = (0, p.withTheme)(k, 'ListItem');
  e.default = V
}