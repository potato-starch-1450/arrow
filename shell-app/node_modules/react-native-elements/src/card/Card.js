module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.Card = void 0;
  var l = t(r(d[1])),
      n = t(r(d[2])),
      o = t(r(d[3])),
      u = t(r(d[4])),
      f = t(r(d[5])),
      s = r(d[6]),
      c = t(r(d[7])),
      y = r(d[8]),
      p = t(r(d[9])),
      S = t(r(d[10])),
      b = t(r(d[11])),
      h = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/card/Card.js";

  function w(t, l) {
      var n = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(t);
          l && (o = o.filter(function(l) {
              return Object.getOwnPropertyDescriptor(t, l).enumerable
          })), n.push.apply(n, o)
      }
      return n
  }

  function T(t) {
      for (var n = 1; n < arguments.length; n++) {
          var o = null != arguments[n] ? arguments[n] : {};
          n % 2 ? w(o, !0).forEach(function(n) {
              (0, l.default)(t, n, o[n])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : w(o).forEach(function(l) {
              Object.defineProperty(t, l, Object.getOwnPropertyDescriptor(o, l))
          })
      }
      return t
  }
  var _ = function(t) {
      var l = t.children,
          f = t.containerStyle,
          c = t.wrapperStyle,
          y = t.imageWrapperStyle,
          w = t.title,
          T = t.titleStyle,
          _ = t.titleNumberOfLines,
          O = t.featuredTitle,
          P = t.featuredTitleStyle,
          v = t.featuredSubtitle,
          j = t.featuredSubtitleStyle,
          C = t.dividerStyle,
          E = t.image,
          V = t.imageStyle,
          k = t.imageProps,
          W = t.theme,
          D = (0, o.default)(t, ["children", "containerStyle", "wrapperStyle", "imageWrapperStyle", "title", "titleStyle", "titleNumberOfLines", "featuredTitle", "featuredTitleStyle", "featuredSubtitle", "featuredSubtitleStyle", "dividerStyle", "image", "imageStyle", "imageProps", "theme"]);
      return u.default.createElement(s.View, (0, n.default)({}, D, {
          style: s.StyleSheet.flatten([N.container(W), E && {
              padding: 0
          }, f && f]),
          __source: {
              fileName: h,
              lineNumber: 34
          }
      }), u.default.createElement(s.View, {
          style: s.StyleSheet.flatten([N.wrapper, c && c]),
          __source: {
              fileName: h,
              lineNumber: 42
          }
      }, '' === w || u.default.isValidElement(w) ? w : w && w.length && u.default.createElement(s.View, {
          __source: {
              fileName: h,
              lineNumber: 52
          }
      }, u.default.createElement(p.default, {
          testID: "cardTitle",
          style: s.StyleSheet.flatten([N.cardTitle(W), E && N.imageCardTitle, T && T]),
          numberOfLines: _,
          __source: {
              fileName: h,
              lineNumber: 53
          }
      }, w), !E && u.default.createElement(S.default, {
          style: s.StyleSheet.flatten([N.divider, C && C]),
          __source: {
              fileName: h,
              lineNumber: 66
          }
      })), E && u.default.createElement(s.View, {
          style: y && y,
          __source: {
              fileName: h,
              lineNumber: 77
          }
      }, u.default.createElement(b.default, (0, n.default)({
          style: [{
              width: null,
              height: 150
          }, V && V],
          source: E
      }, k, {
          __source: {
              fileName: h,
              lineNumber: 78
          }
      }), (O || v) && u.default.createElement(s.View, {
          style: N.overlayContainer,
          __source: {
              fileName: h,
              lineNumber: 84
          }
      }, O && u.default.createElement(p.default, {
          style: s.StyleSheet.flatten([N.featuredTitle, P && P]),
          __source: {
              fileName: h,
              lineNumber: 86
          }
      }, O), v && u.default.createElement(p.default, {
          style: s.StyleSheet.flatten([N.featuredSubtitle, j && j]),
          __source: {
              fileName: h,
              lineNumber: 96
          }
      }, v))), u.default.createElement(s.View, {
          style: s.StyleSheet.flatten([{
              padding: 10
          }, c && c]),
          __source: {
              fileName: h,
              lineNumber: 109
          }
      }, l)), !E && l))
  };
  e.Card = _, _.propTypes = {
      children: f.default.oneOfType([f.default.element, f.default.arrayOf(f.default.element)]),
      containerStyle: y.ViewPropTypes.style,
      wrapperStyle: y.ViewPropTypes.style,
      overlayStyle: y.ViewPropTypes.style,
      title: f.default.oneOfType([f.default.string, f.default.element]),
      titleStyle: y.TextPropTypes.style,
      featuredTitle: f.default.string,
      featuredTitleStyle: y.TextPropTypes.style,
      featuredSubtitle: f.default.string,
      featuredSubtitleStyle: y.TextPropTypes.style,
      dividerStyle: y.ViewPropTypes.style,
      image: s.Image.propTypes.source,
      imageStyle: y.ViewPropTypes.style,
      imageWrapperStyle: y.ViewPropTypes.style,
      imageProps: f.default.object,
      titleNumberOfLines: f.default.number,
      theme: f.default.object
  };
  var N = {
          container: function(t) {
              return T({
                  backgroundColor: 'white',
                  borderWidth: 1,
                  padding: 15,
                  margin: 15,
                  marginBottom: 0,
                  borderColor: t.colors.grey5
              }, s.Platform.select({
                  android: {
                      elevation: 1
                  },
                  default: {
                      shadowColor: 'rgba(0,0,0, .2)',
                      shadowOffset: {
                          height: 0,
                          width: 0
                      },
                      shadowOpacity: 1,
                      shadowRadius: 1
                  }
              }))
          },
          featuredTitle: T({
              fontSize: (0, c.default)(18),
              marginBottom: 8,
              color: 'white'
          }, s.Platform.select({
              android: T({}, y.fonts.android.black),
              default: {
                  fontWeight: '800'
              }
          })),
          featuredSubtitle: T({
              fontSize: (0, c.default)(13),
              marginBottom: 8,
              color: 'white'
          }, s.Platform.select({
              android: T({}, y.fonts.android.black),
              default: {
                  fontWeight: '400'
              }
          })),
          wrapper: {
              backgroundColor: 'transparent'
          },
          divider: {
              marginBottom: 15
          },
          cardTitle: function(t) {
              return T({
                  fontSize: (0, c.default)(14),
                  color: t.colors.grey1
              }, s.Platform.select({
                  android: T({}, y.fonts.android.black),
                  default: {
                      fontWeight: 'bold'
                  }
              }), {
                  textAlign: 'center',
                  marginBottom: 15
              })
          },
          imageCardTitle: {
              marginTop: 15
          },
          overlayContainer: {
              flex: 1,
              alignItems: 'center',
              backgroundColor: 'rgba(0, 0, 0, 0.2)',
              alignSelf: 'stretch',
              justifyContent: 'center',
              position: 'absolute',
              top: 0,
              left: 0,
              right: 0,
              bottom: 0
          }
      },
      O = (0, y.withTheme)(_, 'Card');
  e.default = O
}