module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]),
      o = r(d[1]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = e.Tooltip = void 0;
  var n = t(r(d[2])),
      l = t(r(d[3])),
      s = t(r(d[4])),
      u = t(r(d[5])),
      f = t(r(d[6])),
      c = t(r(d[7])),
      p = t(r(d[8])),
      h = t(r(d[9])),
      b = r(d[10]),
      y = r(d[11]),
      O = r(d[12]),
      v = t(r(d[13])),
      w = o(r(d[14])),
      P = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/tooltip/Tooltip.js";

  function C(t, o) {
      var n = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
          var l = Object.getOwnPropertySymbols(t);
          o && (l = l.filter(function(o) {
              return Object.getOwnPropertyDescriptor(t, o).enumerable
          })), n.push.apply(n, l)
      }
      return n
  }

  function _(t) {
      for (var o = 1; o < arguments.length; o++) {
          var l = null != arguments[o] ? arguments[o] : {};
          o % 2 ? C(l, !0).forEach(function(o) {
              (0, n.default)(t, o, l[o])
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(l)) : C(l).forEach(function(o) {
              Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(l, o))
          })
      }
      return t
  }
  var E = (function(t) {
      function o() {
          var t, n;
          (0, l.default)(this, o);
          for (var s = arguments.length, c = new Array(s), h = 0; h < s; h++) c[h] = arguments[h];
          return (n = (0, u.default)(this, (t = (0, f.default)(o)).call.apply(t, [this].concat(c)))).state = {
              isVisible: !1,
              yOffset: 0,
              xOffset: 0,
              elementWidth: 0,
              elementHeight: 0
          }, n.toggleTooltip = function() {
              var t = n.props.onClose;
              n.getElementPosition(), n.setState(function(o) {
                  return o.isVisible && !O.isIOS && t && t(), {
                      isVisible: !o.isVisible
                  }
              })
          }, n.wrapWithPress = function(t, o) {
              return t ? p.default.createElement(b.TouchableOpacity, {
                  onPress: n.toggleTooltip,
                  activeOpacity: 1,
                  __source: {
                      fileName: P,
                      lineNumber: 39
                  }
              }, o) : o
          }, n.getTooltipStyle = function() {
              var t = n.state,
                  o = t.yOffset,
                  l = t.xOffset,
                  s = t.elementHeight,
                  u = t.elementWidth,
                  f = n.props,
                  c = f.height,
                  p = f.backgroundColor,
                  h = f.width,
                  b = f.withPointer,
                  y = f.containerStyle,
                  v = (0, w.default)(l, o, u, s, O.ScreenWidth, O.ScreenHeight, h, c, b);
              return _({
                  position: 'absolute',
                  left: v.x,
                  top: v.y,
                  width: h,
                  height: c,
                  backgroundColor: p,
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  flex: 1,
                  borderRadius: 10,
                  padding: 10
              }, y)
          }, n.renderPointer = function(t) {
              var o = n.state,
                  l = o.yOffset,
                  s = o.xOffset,
                  u = o.elementHeight,
                  f = o.elementWidth,
                  c = n.props,
                  h = c.backgroundColor,
                  y = c.pointerColor,
                  C = l > t;
              return p.default.createElement(b.View, {
                  style: {
                      position: 'absolute',
                      top: C ? l - 13 : l + u - 2,
                      left: s + (0, w.getElementVisibleWidth)(f, s, O.ScreenWidth) / 2 - 7.5
                  },
                  __source: {
                      fileName: P,
                      lineNumber: 94
                  }
              }, p.default.createElement(v.default, {
                  style: {
                      borderBottomColor: y || h
                  },
                  isDown: C,
                  __source: {
                      fileName: P,
                      lineNumber: 104
                  }
              }))
          }, n.renderContent = function(t) {
              var o = n.props,
                  l = o.popover,
                  s = o.withPointer,
                  u = o.toggleOnPress,
                  f = o.highlightColor;
              if (!t) return n.wrapWithPress(u, n.props.children);
              var c = n.state,
                  h = c.yOffset,
                  y = c.xOffset,
                  O = c.elementWidth,
                  v = c.elementHeight,
                  w = n.getTooltipStyle();
              return p.default.createElement(b.View, {
                  __source: {
                      fileName: P,
                      lineNumber: 122
                  }
              }, p.default.createElement(b.View, {
                  style: {
                      position: 'absolute',
                      top: h,
                      left: y,
                      backgroundColor: f,
                      overflow: 'visible',
                      width: O,
                      height: v
                  },
                  __source: {
                      fileName: P,
                      lineNumber: 123
                  }
              }, n.props.children), s && n.renderPointer(w.top), p.default.createElement(b.View, {
                  style: w,
                  testID: "tooltipPopoverContainer",
                  __source: {
                      fileName: P,
                      lineNumber: 137
                  }
              }, l))
          }, n.getElementPosition = function() {
              n.renderedElement && n.renderedElement.measure(function(t, o, l, s, u, f) {
                  n.setState({
                      xOffset: u,
                      yOffset: O.isIOS ? f : f - b.StatusBar.currentHeight,
                      elementWidth: l,
                      elementHeight: s
                  })
              })
          }, n
      }
      return (0, c.default)(o, t), (0, s.default)(o, [{
          key: "componentDidMount",
          value: function() {
              setTimeout(this.getElementPosition, 500)
          }
      }, {
          key: "render",
          value: function() {
              var t = this,
                  o = this.state.isVisible,
                  n = this.props,
                  l = n.onClose,
                  s = n.withOverlay,
                  u = n.overlayColor,
                  f = n.onOpen;
              return p.default.createElement(b.View, {
                  collapsable: !1,
                  ref: function(o) {
                      t.renderedElement = o
                  },
                  __source: {
                      fileName: P,
                      lineNumber: 177
                  }
              }, this.renderContent(!1), p.default.createElement(b.Modal, {
                  animationType: "fade",
                  visible: o,
                  transparent: !0,
                  onDismiss: l,
                  onShow: f,
                  onRequestClose: l,
                  __source: {
                      fileName: P,
                      lineNumber: 184
                  }
              }, p.default.createElement(b.TouchableOpacity, {
                  style: N.container(s, u),
                  onPress: this.toggleTooltip,
                  activeOpacity: 1,
                  __source: {
                      fileName: P,
                      lineNumber: 192
                  }
              }, this.renderContent(!0))))
          }
      }]), o
  })(p.default.PureComponent);
  e.Tooltip = E, E.propTypes = {
      children: h.default.element,
      withPointer: h.default.bool,
      popover: h.default.element,
      toggleOnPress: h.default.bool,
      height: h.default.number,
      width: h.default.oneOfType([h.default.number, h.default.string]),
      containerStyle: y.ViewPropTypes.style,
      pointerColor: h.default.string,
      onClose: h.default.func,
      onOpen: h.default.func,
      overlayColor: h.default.string,
      withOverlay: h.default.bool,
      backgroundColor: h.default.string,
      highlightColor: h.default.string
  }, E.defaultProps = {
      withOverlay: !0,
      overlayColor: 'rgba(250, 250, 250, 0.70)',
      highlightColor: 'transparent',
      withPointer: !0,
      toggleOnPress: !0,
      height: 40,
      width: 150,
      containerStyle: {},
      backgroundColor: '#617080',
      onClose: function() {},
      onOpen: function() {}
  };
  var N = {
          container: function(t, o) {
              return {
                  backgroundColor: t ? o : 'transparent',
                  flex: 1
              }
          }
      },
      T = (0, y.withTheme)(E, 'Tooltip');
  e.default = T
}