module.exports = function(g, r, i, a, m, e, d) {
  var t = r(d[0]);
  Object.defineProperty(e, "__esModule", {
      value: !0
  }), e.default = void 0;
  var n = t(r(d[1])),
      o = t(r(d[2])),
      l = t(r(d[3])),
      u = r(d[4]),
      f = t(r(d[5])),
      c = "/Users/linyiting/Desktop/Arrow/arrow/node_modules/react-native-elements/src/badge/withBadge.js",
      s = u.StyleSheet.create({
          badgeContainer: {
              position: 'absolute'
          },
          container: {
              alignItems: 'center',
              justifyContent: 'center',
              position: 'relative'
          }
      }),
      v = function(t) {
          var v = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          return function(y) {
              var b = function(b) {
                  var _ = v.bottom,
                      h = v.hidden,
                      p = void 0 !== h && h,
                      S = v.left,
                      N = v.containerStyle,
                      w = (0, o.default)(v, ["bottom", "hidden", "left", "containerStyle"]),
                      C = v.right,
                      j = void 0 === C ? -16 : C,
                      E = v.top,
                      B = void 0 === E ? -1 : E;
                  t || (j = -3, B = 3);
                  var k = 'function' == typeof t ? t(b) : t;
                  return l.default.createElement(u.View, {
                      style: u.StyleSheet.flatten([s.container, N]),
                      __source: {
                          fileName: c,
                          lineNumber: 26
                      }
                  }, l.default.createElement(y, (0, n.default)({}, b, {
                      __source: {
                          fileName: c,
                          lineNumber: 27
                      }
                  })), !p && l.default.createElement(f.default, (0, n.default)({
                      value: k,
                      status: "error",
                      containerStyle: u.StyleSheet.flatten([s.badgeContainer, {
                          bottom: _,
                          left: S,
                          right: j,
                          top: B
                      }])
                  }, w, {
                      __source: {
                          fileName: c,
                          lineNumber: 30
                      }
                  })))
              };
              return b.displayName = "WithBadge(" + (y.displayName || y.name || 'Component') + ")", b
          }
      };
  e.default = v
}